<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>__libc_pread (3,470,000,000 samples, 0.03%)</title><rect x="664.1" y="325" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="667.13" y="335.5" ></text>
</g>
<g >
<title>xas_load (6,220,000,000 samples, 0.06%)</title><rect x="615.0" y="165" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="618.02" y="175.5" ></text>
</g>
<g >
<title>GlassPostListTable::get_doclength (5,860,000,000 samples, 0.05%)</title><rect x="1042.5" y="405" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1045.51" y="415.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (71,190,000,000 samples, 0.64%)</title><rect x="1044.9" y="373" width="7.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1047.92" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (2,070,000,000 samples, 0.02%)</title><rect x="265.8" y="149" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="268.77" y="159.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryBranch::get_description_helper[abi:cxx11] (3,660,000,000 samples, 0.03%)</title><rect x="1159.6" y="485" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1162.63" y="495.5" ></text>
</g>
<g >
<title>GlassPostList::init (20,300,000,000 samples, 0.18%)</title><rect x="259.7" y="293" width="2.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="262.72" y="303.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (3,410,000,000 samples, 0.03%)</title><rect x="1189.4" y="261" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.40" y="271.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (24,230,000,000 samples, 0.22%)</title><rect x="238.3" y="357" width="2.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="241.31" y="367.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (1,021,860,000,000 samples, 9.13%)</title><rect x="933.7" y="389" width="107.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="936.71" y="399.5" >GlassPostList..</text>
</g>
<g >
<title>vfs_read (12,870,000,000 samples, 0.11%)</title><rect x="260.0" y="149" width="1.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="262.97" y="159.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (3,730,000,000 samples, 0.03%)</title><rect x="234.6" y="261" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="237.56" y="271.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (4,050,000,000 samples, 0.04%)</title><rect x="1168.1" y="597" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1171.07" y="607.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (202,130,000,000 samples, 1.81%)</title><rect x="213.8" y="357" width="21.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="216.76" y="367.5" >G..</text>
</g>
<g >
<title>vfs_write (3,050,000,000 samples, 0.03%)</title><rect x="1166.8" y="469" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1169.77" y="479.5" ></text>
</g>
<g >
<title>kl::meta::MetaManager::read_term_count (49,670,000,000 samples, 0.44%)</title><rect x="262.3" y="293" width="5.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="265.30" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,260,000,000 samples, 0.06%)</title><rect x="23.5" y="565" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.46" y="575.5" ></text>
</g>
<g >
<title>[unknown] (980,000,000 samples, 0.01%)</title><rect x="14.3" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.27" y="607.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (446,230,000,000 samples, 3.99%)</title><rect x="211.6" y="405" width="47.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="214.61" y="415.5" >Glas..</text>
</g>
<g >
<title>vfs_read (6,500,000,000 samples, 0.06%)</title><rect x="1055.6" y="245" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1058.58" y="255.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (4,970,000,000 samples, 0.04%)</title><rect x="1161.4" y="485" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1164.43" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,380,000,000 samples, 0.01%)</title><rect x="1166.6" y="533" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1169.60" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (3,390,000,000 samples, 0.03%)</title><rect x="1189.4" y="245" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.40" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (7,930,000,000 samples, 0.07%)</title><rect x="659.1" y="309" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="662.08" y="319.5" ></text>
</g>
<g >
<title>rocksdb::TableCache::Get (3,500,000,000 samples, 0.03%)</title><rect x="268.1" y="261" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="271.09" y="271.5" ></text>
</g>
<g >
<title>new_sync_read (23,420,000,000 samples, 0.21%)</title><rect x="75.3" y="309" width="2.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="78.32" y="319.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (1,010,000,000 samples, 0.01%)</title><rect x="1042.0" y="405" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1045.04" y="415.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,700,000,000 samples, 0.02%)</title><rect x="1034.3" y="213" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1037.34" y="223.5" ></text>
</g>
<g >
<title>[ai_index] (2,340,000,000 samples, 0.02%)</title><rect x="1103.9" y="469" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1106.86" y="479.5" ></text>
</g>
<g >
<title>filemap_read (17,480,000,000 samples, 0.16%)</title><rect x="81.0" y="229" width="1.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="83.98" y="239.5" ></text>
</g>
<g >
<title>IOThreadPool14 (1,470,000,000 samples, 0.01%)</title><rect x="11.7" y="613" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="14.68" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::SyncMultiMetricStorage::RecordLong (1,170,000,000 samples, 0.01%)</title><rect x="27.2" y="501" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="30.16" y="511.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, Xapian::Internal::MSetItem, __gnu_cxx::__ops::_Iter_comp_val&lt;bool  (1,170,000,000 samples, 0.01%)</title><rect x="1158.4" y="485" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.43" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,010,000,000 samples, 0.01%)</title><rect x="596.3" y="373" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="599.31" y="383.5" ></text>
</g>
<g >
<title>Xapian::Query::Internal::postlist_sub_and_like (81,660,000,000 samples, 0.73%)</title><rect x="259.2" y="421" width="8.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="262.21" y="431.5" ></text>
</g>
<g >
<title>GlassTable::find_in_leaf (20,260,000,000 samples, 0.18%)</title><rect x="617.2" y="373" width="2.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="620.25" y="383.5" ></text>
</g>
<g >
<title>GlassPostList::init (1,590,000,000 samples, 0.01%)</title><rect x="259.5" y="293" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="262.46" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (2,080,000,000 samples, 0.02%)</title><rect x="211.4" y="389" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="214.40" y="399.5" ></text>
</g>
<g >
<title>xas_load (8,980,000,000 samples, 0.08%)</title><rect x="648.0" y="181" width="1.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="651.00" y="191.5" ></text>
</g>
<g >
<title>touch_atime (2,560,000,000 samples, 0.02%)</title><rect x="233.2" y="181" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="236.24" y="191.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (2,480,000,000 samples, 0.02%)</title><rect x="266.8" y="165" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="269.82" y="175.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::common::OrderedAttributeMap::SetAttribute (1,980,000,000 samples, 0.02%)</title><rect x="1163.7" y="373" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1166.75" y="383.5" ></text>
</g>
<g >
<title>filemap_read (1,200,000,000 samples, 0.01%)</title><rect x="1042.9" y="165" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1045.91" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,810,000,000 samples, 0.08%)</title><rect x="73.8" y="357" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="76.82" y="367.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (314,860,000,000 samples, 2.81%)</title><rect x="949.8" y="165" width="33.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="952.85" y="175.5" >co..</text>
</g>
<g >
<title>__x64_sys_pread64 (6,640,000,000 samples, 0.06%)</title><rect x="705.4" y="309" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="708.45" y="319.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (13,730,000,000 samples, 0.12%)</title><rect x="702.7" y="405" width="1.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="705.66" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (105,260,000,000 samples, 0.94%)</title><rect x="244.1" y="293" width="11.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="247.09" y="303.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryBranch::do_or_like (6,290,000,000 samples, 0.06%)</title><rect x="267.8" y="437" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="270.82" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Rb_tree (1,420,000,000 samples, 0.01%)</title><rect x="1164.1" y="405" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1167.15" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1,100,000,000 samples, 0.01%)</title><rect x="13.0" y="597" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.05" y="607.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (14,100,000,000 samples, 0.13%)</title><rect x="253.2" y="181" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="256.15" y="191.5" ></text>
</g>
<g >
<title>atime_needs_update (2,590,000,000 samples, 0.02%)</title><rect x="1033.9" y="165" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1036.88" y="175.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2,810,000,000 samples, 0.03%)</title><rect x="664.7" y="229" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="667.72" y="239.5" ></text>
</g>
<g >
<title>timer_delete@@GLIBC_2.34 (1,480,000,000 samples, 0.01%)</title><rect x="1158.6" y="485" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1161.57" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,620,000,000 samples, 0.24%)</title><rect x="75.2" y="373" width="2.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="78.20" y="383.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (2,080,000,000 samples, 0.02%)</title><rect x="211.4" y="309" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="214.40" y="319.5" ></text>
</g>
<g >
<title>apache::thrift::GeneratedAsyncProcessorBase::deserializeRequest&lt;apache::thrift::CompactProtocolReader, apache::thrift::ThriftPresult&lt;false, apache::thrift::FieldData&lt; (3,510,000,000 samples, 0.03%)</title><rect x="27.4" y="549" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="30.37" y="559.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (4,510,000,000 samples, 0.04%)</title><rect x="1182.0" y="597" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1184.95" y="607.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (3,670,000,000 samples, 0.03%)</title><rect x="933.3" y="357" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="936.33" y="367.5" ></text>
</g>
<g >
<title>ThriftIO21 (1,490,000,000 samples, 0.01%)</title><rect x="15.9" y="613" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="18.92" y="623.5" ></text>
</g>
<g >
<title>BranchPostList::~BranchPostList (1,360,000,000 samples, 0.01%)</title><rect x="1075.4" y="421" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1078.43" y="431.5" ></text>
</g>
<g >
<title>touch_atime (1,800,000,000 samples, 0.02%)</title><rect x="615.9" y="197" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="618.89" y="207.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (1,110,000,000 samples, 0.01%)</title><rect x="68.1" y="261" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="71.06" y="271.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1,300,000,000 samples, 0.01%)</title><rect x="705.9" y="197" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="708.93" y="207.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::runNoInline&lt;apache::thrift::preprocessSendT&lt;apache::thrift::CompactProtocolWriter&gt; (1,200,000,000 samples, 0.01%)</title><rect x="27.0" y="421" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="29.98" y="431.5" ></text>
</g>
<g >
<title>security_file_permission (2,400,000,000 samples, 0.02%)</title><rect x="616.1" y="245" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="619.13" y="255.5" ></text>
</g>
<g >
<title>worker_thread (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="581" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1192.40" y="591.5" ></text>
</g>
<g >
<title>xas_load (3,180,000,000 samples, 0.03%)</title><rect x="82.4" y="181" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="85.35" y="191.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (587,830,000,000 samples, 5.25%)</title><rect x="597.0" y="421" width="61.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="599.98" y="431.5" >GlassP..</text>
</g>
<g >
<title>[unknown] (3,650,000,000 samples, 0.03%)</title><rect x="10.4" y="565" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.36" y="575.5" ></text>
</g>
<g >
<title>atime_needs_update (3,740,000,000 samples, 0.03%)</title><rect x="66.9" y="213" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="69.89" y="223.5" ></text>
</g>
<g >
<title>Xapian::MiniRankWeight::get_sumpart (67,410,000,000 samples, 0.60%)</title><rect x="1057.9" y="453" width="7.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1060.89" y="463.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (221,490,000,000 samples, 1.98%)</title><rect x="1012.7" y="357" width="23.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1015.68" y="367.5" >G..</text>
</g>
<g >
<title>GlassCursor::read_tag (8,430,000,000 samples, 0.08%)</title><rect x="1055.5" y="357" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1058.48" y="367.5" ></text>
</g>
<g >
<title>IOThreadPool22 (1,500,000,000 samples, 0.01%)</title><rect x="13.0" y="613" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="16.04" y="623.5" ></text>
</g>
<g >
<title>Xapian::MiniRankWeight::get_sumpart (2,200,000,000 samples, 0.02%)</title><rect x="1096.1" y="453" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1099.08" y="463.5" ></text>
</g>
<g >
<title>GlassTable::read_block (15,090,000,000 samples, 0.13%)</title><rect x="259.9" y="229" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="262.85" y="239.5" ></text>
</g>
<g >
<title>xas_load (1,100,000,000 samples, 0.01%)</title><rect x="80.5" y="309" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="83.47" y="319.5" ></text>
</g>
<g >
<title>aisearch::SUDocItem::write&lt;apache::thrift::CompactProtocolWriter&gt; (2,330,000,000 samples, 0.02%)</title><rect x="1182.6" y="421" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1185.60" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Version::Get (40,900,000,000 samples, 0.37%)</title><rect x="263.2" y="229" width="4.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="266.17" y="239.5" ></text>
</g>
<g >
<title>apache::thrift::concurrency::ThreadManager::Impl::~Impl (3,360,000,000 samples, 0.03%)</title><rect x="1182.5" y="597" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.52" y="607.5" ></text>
</g>
<g >
<title>IOThreadPool19 (1,450,000,000 samples, 0.01%)</title><rect x="12.4" y="613" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="15.44" y="623.5" ></text>
</g>
<g >
<title>ThriftIO7 (1,440,000,000 samples, 0.01%)</title><rect x="18.6" y="613" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="21.59" y="623.5" ></text>
</g>
<g >
<title>GlassVersion::read (1,300,000,000 samples, 0.01%)</title><rect x="1162.9" y="469" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1165.94" y="479.5" ></text>
</g>
<g >
<title>Xapian::Enquire::Internal::get_mset (10,244,380,000,000 samples, 91.50%)</title><rect x="79.0" y="501" width="1079.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="82.04" y="511.5" >Xapian::Enquire::Internal::get_mset</text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (1,990,000,000 samples, 0.02%)</title><rect x="1094.5" y="341" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1097.49" y="351.5" ></text>
</g>
<g >
<title>rw_verify_area (3,530,000,000 samples, 0.03%)</title><rect x="649.6" y="277" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="652.61" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;  (1,270,000,000 samples, 0.01%)</title><rect x="1163.4" y="341" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1166.41" y="351.5" ></text>
</g>
<g >
<title>Xapian::Query::Internal::postlist_sub_and_like (80,770,000,000 samples, 0.72%)</title><rect x="259.3" y="373" width="8.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="262.29" y="383.5" ></text>
</g>
<g >
<title>native_flush_tlb_multi (1,660,000,000 samples, 0.01%)</title><rect x="24.4" y="453" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="27.40" y="463.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryTerm::postlist (6,210,000,000 samples, 0.06%)</title><rect x="267.8" y="405" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="270.83" y="415.5" ></text>
</g>
<g >
<title>ThriftIO28 (1,360,000,000 samples, 0.01%)</title><rect x="17.0" y="613" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.98" y="623.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (161,140,000,000 samples, 1.44%)</title><rect x="600.3" y="373" width="16.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="603.26" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::common::OrderedAttributeMap::OrderedAttributeMap (2,060,000,000 samples, 0.02%)</title><rect x="1163.7" y="389" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1166.74" y="399.5" ></text>
</g>
<g >
<title>generic_file_read_iter (23,030,000,000 samples, 0.21%)</title><rect x="75.4" y="277" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="78.36" y="287.5" ></text>
</g>
<g >
<title>BranchPostList::~BranchPostList (1,000,000,000 samples, 0.01%)</title><rect x="706.5" y="437" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="709.49" y="447.5" ></text>
</g>
<g >
<title>handle_request (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="517" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.40" y="527.5" ></text>
</g>
<g >
<title>GlassTable::read_block (1,540,000,000 samples, 0.01%)</title><rect x="312.9" y="389" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="315.95" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,240,000,000 samples, 0.06%)</title><rect x="23.5" y="549" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.46" y="559.5" ></text>
</g>
<g >
<title>io_read_block (990,000,000 samples, 0.01%)</title><rect x="70.3" y="373" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="73.28" y="383.5" ></text>
</g>
<g >
<title>handle_request_stat_log (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="533" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.40" y="543.5" ></text>
</g>
<g >
<title>[unknown] (970,000,000 samples, 0.01%)</title><rect x="13.2" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.20" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (19,610,000,000 samples, 0.18%)</title><rect x="80.9" y="325" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="83.89" y="335.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (16,640,000,000 samples, 0.15%)</title><rect x="75.6" y="245" width="1.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="78.59" y="255.5" ></text>
</g>
<g >
<title>GlassTable::read_block (5,150,000,000 samples, 0.05%)</title><rect x="703.5" y="373" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="706.54" y="383.5" ></text>
</g>
<g >
<title>OrPostList::at_end (1,530,000,000 samples, 0.01%)</title><rect x="1154.5" y="485" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1157.52" y="495.5" ></text>
</g>
<g >
<title>GlassDatabase::get_doclength (1,527,190,000,000 samples, 13.64%)</title><rect x="98.1" y="453" width="161.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="101.10" y="463.5" >GlassDatabase::get_d..</text>
</g>
<g >
<title>sysvec_reschedule_ipi (2,080,000,000 samples, 0.02%)</title><rect x="211.4" y="373" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="214.40" y="383.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (3,640,000,000 samples, 0.03%)</title><rect x="664.1" y="357" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="667.11" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (3,360,000,000 samples, 0.03%)</title><rect x="1163.3" y="421" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1166.34" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,080,000,000 samples, 0.02%)</title><rect x="211.4" y="325" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="214.40" y="335.5" ></text>
</g>
<g >
<title>GlassTable::read_block (1,030,000,000 samples, 0.01%)</title><rect x="1094.7" y="341" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1097.72" y="351.5" ></text>
</g>
<g >
<title>ksys_fadvise64_64 (1,600,000,000 samples, 0.01%)</title><rect x="80.4" y="389" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="83.43" y="399.5" ></text>
</g>
<g >
<title>timer_create@@GLIBC_2.34 (1,470,000,000 samples, 0.01%)</title><rect x="1189.0" y="597" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.05" y="607.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (2,540,000,000 samples, 0.02%)</title><rect x="703.2" y="373" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="706.24" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, opentelemetry::v1::sdk::common::AttributeConverter&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (980,000,000 samples, 0.01%)</title><rect x="1163.4" y="309" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1166.44" y="319.5" ></text>
</g>
<g >
<title>rocksdb::DBImplReadOnly::Get (4,650,000,000 samples, 0.04%)</title><rect x="268.0" y="309" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="270.97" y="319.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Get (1,860,000,000 samples, 0.02%)</title><rect x="1160.9" y="421" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1163.90" y="431.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (41,240,000,000 samples, 0.37%)</title><rect x="621.9" y="373" width="4.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="624.93" y="383.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (69,250,000,000 samples, 0.62%)</title><rect x="245.8" y="197" width="7.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="248.78" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (12,590,000,000 samples, 0.11%)</title><rect x="626.9" y="309" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="629.88" y="319.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (3,290,000,000 samples, 0.03%)</title><rect x="18.9" y="597" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.88" y="607.5" ></text>
</g>
<g >
<title>security_file_permission (2,360,000,000 samples, 0.02%)</title><rect x="254.9" y="245" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="257.93" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (112,460,000,000 samples, 1.00%)</title><rect x="244.0" y="325" width="11.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="247.04" y="335.5" ></text>
</g>
<g >
<title>vfs_write (13,750,000,000 samples, 0.12%)</title><rect x="1168.6" y="517" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1171.61" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (13,150,000,000 samples, 0.12%)</title><rect x="21.8" y="565" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="24.77" y="575.5" ></text>
</g>
<g >
<title>touch_atime (4,650,000,000 samples, 0.04%)</title><rect x="66.8" y="229" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="69.82" y="239.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (8,160,000,000 samples, 0.07%)</title><rect x="997.9" y="325" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1000.89" y="335.5" ></text>
</g>
<g >
<title>filemap_read (22,880,000,000 samples, 0.20%)</title><rect x="75.4" y="261" width="2.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="78.38" y="271.5" ></text>
</g>
<g >
<title>mark_page_accessed (980,000,000 samples, 0.01%)</title><rect x="233.1" y="181" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="236.12" y="191.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5,070,000,000 samples, 0.05%)</title><rect x="1095.1" y="181" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1098.07" y="191.5" ></text>
</g>
<g >
<title>__libc_pread (1,170,000,000 samples, 0.01%)</title><rect x="314.9" y="357" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="317.94" y="367.5" ></text>
</g>
<g >
<title>GlassTable::read_block (10,210,000,000 samples, 0.09%)</title><rect x="241.2" y="357" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="244.21" y="367.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (1,230,000,000 samples, 0.01%)</title><rect x="702.8" y="373" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="705.78" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2,560,000,000 samples, 0.02%)</title><rect x="1185.5" y="597" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1188.52" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (173,420,000,000 samples, 1.55%)</title><rect x="215.7" y="277" width="18.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="218.66" y="287.5" ></text>
</g>
<g >
<title>filemap_get_pages (1,820,000,000 samples, 0.02%)</title><rect x="261.1" y="69" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="264.08" y="79.5" ></text>
</g>
<g >
<title>OrPostList::next (24,050,000,000 samples, 0.21%)</title><rect x="1096.5" y="469" width="2.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1099.53" y="479.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3,650,000,000 samples, 0.03%)</title><rect x="10.4" y="533" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="13.36" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (8,270,000,000 samples, 0.07%)</title><rect x="73.8" y="341" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="76.82" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (1,580,000,000 samples, 0.01%)</title><rect x="24.4" y="421" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="27.41" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,880,000,000 samples, 0.04%)</title><rect x="703.6" y="341" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="706.57" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (4,780,000,000 samples, 0.04%)</title><rect x="1189.4" y="389" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.40" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (2,080,000,000 samples, 0.02%)</title><rect x="940.1" y="309" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="943.15" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1,000,000,000 samples, 0.01%)</title><rect x="14.1" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.12" y="607.5" ></text>
</g>
<g >
<title>GlassDatabase::get_doclength (115,580,000,000 samples, 1.03%)</title><rect x="1044.4" y="421" width="12.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1047.37" y="431.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (1,210,000,000 samples, 0.01%)</title><rect x="314.9" y="389" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="317.93" y="399.5" ></text>
</g>
<g >
<title>[unknown] (5,040,000,000 samples, 0.05%)</title><rect x="10.3" y="597" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.26" y="607.5" ></text>
</g>
<g >
<title>__fget_files (2,310,000,000 samples, 0.02%)</title><rect x="244.2" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="247.17" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,290,000,000 samples, 0.07%)</title><rect x="1055.6" y="277" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1058.55" y="287.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (11,080,000,000 samples, 0.10%)</title><rect x="627.0" y="261" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="629.99" y="271.5" ></text>
</g>
<g >
<title>__madvise (2,170,000,000 samples, 0.02%)</title><rect x="24.4" y="581" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="27.38" y="591.5" ></text>
</g>
<g >
<title>__fget_files (4,100,000,000 samples, 0.04%)</title><rect x="1014.7" y="229" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1017.69" y="239.5" ></text>
</g>
<g >
<title>[ai_index] (2,670,000,000 samples, 0.02%)</title><rect x="652.3" y="405" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="655.25" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::LongHistogram&lt;unsigned long&gt;::Record (6,740,000,000 samples, 0.06%)</title><rect x="1164.6" y="517" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1167.58" y="527.5" ></text>
</g>
<g >
<title>__libc_pread (117,610,000,000 samples, 1.05%)</title><rect x="243.5" y="341" width="12.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="246.50" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (203,470,000,000 samples, 1.82%)</title><rect x="1014.5" y="293" width="21.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1017.49" y="303.5" >d..</text>
</g>
<g >
<title>__x64_sys_pread64 (191,510,000,000 samples, 1.71%)</title><rect x="1014.5" y="277" width="20.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1017.54" y="287.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (32,870,000,000 samples, 0.29%)</title><rect x="660.6" y="405" width="3.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="663.59" y="415.5" ></text>
</g>
<g >
<title>atime_needs_update (1,430,000,000 samples, 0.01%)</title><rect x="615.9" y="181" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="618.92" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (191,270,000,000 samples, 1.71%)</title><rect x="630.9" y="341" width="20.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="633.89" y="351.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (1,130,000,000 samples, 0.01%)</title><rect x="312.8" y="421" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="315.82" y="431.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (1,560,000,000 samples, 0.01%)</title><rect x="19.0" y="581" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.05" y="591.5" ></text>
</g>
<g >
<title>GlassTable::find (1,230,000,000 samples, 0.01%)</title><rect x="259.5" y="261" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="262.46" y="271.5" ></text>
</g>
<g >
<title>x2apic_send_IPI_mask (1,350,000,000 samples, 0.01%)</title><rect x="24.4" y="389" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="27.43" y="399.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (3,070,000,000 samples, 0.03%)</title><rect x="1054.4" y="133" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1057.36" y="143.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::GetFromTable (5,610,000,000 samples, 0.05%)</title><rect x="262.6" y="213" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="265.57" y="223.5" ></text>
</g>
<g >
<title>folly::EventBaseAtomicNotificationQueue&lt;std::variant&lt;apache::thrift::QueueReplyInfo, apache::thrift::StreamReplyInfo, apache::thrift::SinkConsumerReplyInfo&gt;, apache::thrift::ReplyInfoConsumer&gt;::~EventBaseAtomicNotificationQueue (3,610,000,000 samples, 0.03%)</title><rect x="1166.7" y="581" width="0.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1169.75" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_open (6,310,000,000 samples, 0.06%)</title><rect x="23.5" y="581" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="26.45" y="591.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (61,950,000,000 samples, 0.55%)</title><rect x="59.9" y="213" width="6.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="62.89" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (1,050,000,000 samples, 0.01%)</title><rect x="314.9" y="309" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="317.94" y="319.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1,680,000,000 samples, 0.02%)</title><rect x="24.4" y="469" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="27.40" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1,010,000,000 samples, 0.01%)</title><rect x="596.3" y="357" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="599.31" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,730,000,000 samples, 0.13%)</title><rect x="1168.6" y="581" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.56" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,810,000,000 samples, 0.02%)</title><rect x="80.4" y="421" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="83.43" y="431.5" ></text>
</g>
<g >
<title>GlassPostList::at_end (1,160,000,000 samples, 0.01%)</title><rect x="1072.6" y="453" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1075.56" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1,490,000,000 samples, 0.01%)</title><rect x="616.2" y="229" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="619.17" y="239.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (437,860,000,000 samples, 3.91%)</title><rect x="945.9" y="213" width="46.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="948.87" y="223.5" >ext4..</text>
</g>
<g >
<title>[unknown] (970,000,000 samples, 0.01%)</title><rect x="13.4" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.36" y="607.5" ></text>
</g>
<g >
<title>ThriftIO25 (1,400,000,000 samples, 0.01%)</title><rect x="16.5" y="613" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="19.53" y="623.5" ></text>
</g>
<g >
<title>GlassTable::find_in_leaf (3,810,000,000 samples, 0.03%)</title><rect x="70.4" y="405" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="73.43" y="415.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (7,430,000,000 samples, 0.07%)</title><rect x="659.1" y="261" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="662.12" y="271.5" ></text>
</g>
<g >
<title>CivetServer::requestHandler (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="501" width="0.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1192.40" y="511.5" ></text>
</g>
<g >
<title>ThriftIO14 (1,430,000,000 samples, 0.01%)</title><rect x="15.1" y="613" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="18.06" y="623.5" ></text>
</g>
<g >
<title>current_time (1,710,000,000 samples, 0.02%)</title><rect x="67.1" y="197" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="70.08" y="207.5" ></text>
</g>
<g >
<title>apache::thrift::GeneratedAsyncProcessorBase::serializeResponseImpl&lt;apache::thrift::SerializedResponse, apache::thrift::CompactProtocolWriter, apache::thrift::ThriftPresult&lt;true, apache::thrift::FieldData&lt; (3,080,000,000 samples, 0.03%)</title><rect x="1182.5" y="453" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1185.54" y="463.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (11,060,000,000 samples, 0.10%)</title><rect x="1092.7" y="165" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1095.65" y="175.5" ></text>
</g>
<g >
<title>copy_page_to_iter (6,790,000,000 samples, 0.06%)</title><rect x="1017.0" y="181" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1019.98" y="191.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (34,090,000,000 samples, 0.30%)</title><rect x="1066.2" y="453" width="3.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1069.17" y="463.5" ></text>
</g>
<g >
<title>LocalSubMatch::open_post_list (79,270,000,000 samples, 0.71%)</title><rect x="259.4" y="341" width="8.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="262.40" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (3,180,000,000 samples, 0.03%)</title><rect x="649.6" y="261" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="652.64" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,540,000,000 samples, 0.01%)</title><rect x="261.6" y="213" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="264.64" y="223.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (19,680,000,000 samples, 0.18%)</title><rect x="613.6" y="181" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="616.61" y="191.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual (5,350,000,000 samples, 0.05%)</title><rect x="262.6" y="181" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="265.58" y="191.5" ></text>
</g>
<g >
<title>aisearch::SUSearchServiceAsyncProcessor::executeRequest_ShardSearch&lt;apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter&gt; (10,806,920,000,000 samples, 96.53%)</title><rect x="27.3" y="565" width="1139.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="30.33" y="575.5" >aisearch::SUSearchServiceAsyncProcessor::executeRequest_ShardSearch&lt;apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter&gt;</text>
</g>
<g >
<title>security_file_permission (8,530,000,000 samples, 0.08%)</title><rect x="992.1" y="213" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="995.14" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,950,000,000 samples, 0.06%)</title><rect x="705.4" y="325" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="708.44" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (1,360,000,000 samples, 0.01%)</title><rect x="658.8" y="405" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="661.79" y="415.5" ></text>
</g>
<g >
<title>IOThreadPool13 (1,520,000,000 samples, 0.01%)</title><rect x="11.5" y="613" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="14.52" y="623.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (25,930,000,000 samples, 0.23%)</title><rect x="702.6" y="421" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="705.58" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1,020,000,000 samples, 0.01%)</title><rect x="11.1" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.06" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::DefaultAggregation::CreateAggregation (1,710,000,000 samples, 0.02%)</title><rect x="1164.8" y="373" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1167.83" y="383.5" ></text>
</g>
<g >
<title>MultiAndPostList::find_next_match (4,172,080,000,000 samples, 37.27%)</title><rect x="268.5" y="469" width="439.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="271.54" y="479.5" >MultiAndPostList::find_next_match</text>
</g>
<g >
<title>new_sync_read (7,120,000,000 samples, 0.06%)</title><rect x="1095.0" y="245" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1098.00" y="255.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUHandleTable::Lookup (1,850,000,000 samples, 0.02%)</title><rect x="264.7" y="85" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="267.69" y="95.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (1,980,000,000 samples, 0.02%)</title><rect x="1011.5" y="357" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1014.46" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (3,100,000,000 samples, 0.03%)</title><rect x="664.7" y="293" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="667.69" y="303.5" ></text>
</g>
<g >
<title>Xapian::MiniRankWeight::get_sumpart (23,350,000,000 samples, 0.21%)</title><rect x="1101.4" y="469" width="2.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1104.38" y="479.5" ></text>
</g>
<g >
<title>filemap_get_pages (24,790,000,000 samples, 0.22%)</title><rect x="230.5" y="181" width="2.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="233.50" y="191.5" ></text>
</g>
<g >
<title>Glass::compare&lt;Glass::LeafItem, Glass::LeafItem&gt; (1,050,000,000 samples, 0.01%)</title><rect x="703.0" y="357" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="705.98" y="367.5" ></text>
</g>
<g >
<title>mark_page_accessed (2,670,000,000 samples, 0.02%)</title><rect x="66.5" y="229" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="69.49" y="239.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::SyncMetricStorage::RecordLong (6,540,000,000 samples, 0.06%)</title><rect x="1164.6" y="485" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1167.60" y="495.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (7,770,000,000 samples, 0.07%)</title><rect x="1055.5" y="341" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1058.51" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::common::OrderedAttributeMap::OrderedAttributeMap (2,350,000,000 samples, 0.02%)</title><rect x="1163.7" y="453" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1166.73" y="463.5" ></text>
</g>
<g >
<title>__libc_pread (22,920,000,000 samples, 0.20%)</title><rect x="1008.8" y="325" width="2.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1011.81" y="335.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (2,015,270,000,000 samples, 18.00%)</title><rect x="721.3" y="389" width="212.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="724.31" y="399.5" >GlassPostList::move_forward_..</text>
</g>
<g >
<title>__fget_files (2,740,000,000 samples, 0.02%)</title><rect x="602.4" y="245" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="605.45" y="255.5" ></text>
</g>
<g >
<title>filemap_get_pages (29,580,000,000 samples, 0.26%)</title><rect x="645.9" y="213" width="3.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="648.94" y="223.5" ></text>
</g>
<g >
<title>apache::thrift::clientSendT&lt; (1,450,000,000 samples, 0.01%)</title><rect x="27.0" y="437" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="29.95" y="447.5" ></text>
</g>
<g >
<title>apache::thrift::HandlerCallback&lt;std::unique_ptr&lt;aisearch::SUSearchResult, std::default_delete&lt;aisearch::SUSearchResult&gt; &gt; &gt;::result (3,090,000,000 samples, 0.03%)</title><rect x="1182.5" y="501" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1185.54" y="511.5" ></text>
</g>
<g >
<title>GlassPostList::at_end (1,600,000,000 samples, 0.01%)</title><rect x="95.8" y="469" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="98.82" y="479.5" ></text>
</g>
<g >
<title>GlassPostListTable::get_doclength (1,516,770,000,000 samples, 13.55%)</title><rect x="99.2" y="437" width="159.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="102.19" y="447.5" >GlassPostListTable::..</text>
</g>
<g >
<title>filemap_get_pages (5,980,000,000 samples, 0.05%)</title><rect x="82.2" y="213" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="85.15" y="223.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (205,800,000,000 samples, 1.84%)</title><rect x="629.4" y="389" width="21.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="632.42" y="399.5" >G..</text>
</g>
<g >
<title>do_timer_create (1,290,000,000 samples, 0.01%)</title><rect x="1189.1" y="533" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.06" y="543.5" ></text>
</g>
<g >
<title>generic_file_read_iter (6,180,000,000 samples, 0.06%)</title><rect x="1055.6" y="197" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1058.60" y="207.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (8,890,000,000 samples, 0.08%)</title><rect x="1094.9" y="357" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1097.89" y="367.5" ></text>
</g>
<g >
<title>GlassPostList::next (10,500,000,000 samples, 0.09%)</title><rect x="1074.1" y="437" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1077.12" y="447.5" ></text>
</g>
<g >
<title>GlassDatabase::open_tables (2,440,000,000 samples, 0.02%)</title><rect x="1162.9" y="485" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1165.94" y="495.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (4,290,000,000 samples, 0.04%)</title><rect x="236.0" y="341" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="238.99" y="351.5" ></text>
</g>
<g >
<title>IOThreadPool9 (1,450,000,000 samples, 0.01%)</title><rect x="14.4" y="613" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="17.43" y="623.5" ></text>
</g>
<g >
<title>new_sync_read (17,780,000,000 samples, 0.16%)</title><rect x="81.0" y="277" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="83.95" y="287.5" ></text>
</g>
<g >
<title>read_start_of_chunk (4,450,000,000 samples, 0.04%)</title><rect x="657.8" y="405" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="660.75" y="415.5" ></text>
</g>
<g >
<title>filemap_read (171,750,000,000 samples, 1.53%)</title><rect x="1016.1" y="197" width="18.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1019.07" y="207.5" ></text>
</g>
<g >
<title>GlassTable::prev_for_sequential (5,200,000,000 samples, 0.05%)</title><rect x="703.5" y="389" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="706.53" y="399.5" ></text>
</g>
<g >
<title>rw_verify_area (7,360,000,000 samples, 0.07%)</title><rect x="67.4" y="293" width="0.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="70.40" y="303.5" ></text>
</g>
<g >
<title>GlassTable::read_block (8,770,000,000 samples, 0.08%)</title><rect x="1094.9" y="341" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1097.90" y="351.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (7,030,000,000 samples, 0.06%)</title><rect x="616.4" y="293" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="619.40" y="303.5" ></text>
</g>
<g >
<title>kl::storage::Storage::get (4,200,000,000 samples, 0.04%)</title><rect x="1160.7" y="501" width="0.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1163.70" y="511.5" ></text>
</g>
<g >
<title>__seccomp_filter (6,080,000,000 samples, 0.05%)</title><rect x="995.0" y="213" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="997.97" y="223.5" ></text>
</g>
<g >
<title>Xapian::Query::get_description[abi:cxx11] (4,210,000,000 samples, 0.04%)</title><rect x="1159.6" y="517" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1162.62" y="527.5" ></text>
</g>
<g >
<title>__fget_files (9,480,000,000 samples, 0.08%)</title><rect x="943.2" y="213" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="946.21" y="223.5" ></text>
</g>
<g >
<title>__fget_files (3,590,000,000 samples, 0.03%)</title><rect x="215.8" y="229" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="218.78" y="239.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual (1,500,000,000 samples, 0.01%)</title><rect x="1160.9" y="405" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1163.92" y="415.5" ></text>
</g>
<g >
<title>vfs_read (1,360,000,000 samples, 0.01%)</title><rect x="313.0" y="309" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="315.96" y="319.5" ></text>
</g>
<g >
<title>[unknown] (960,000,000 samples, 0.01%)</title><rect x="10.9" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.91" y="607.5" ></text>
</g>
<g >
<title>apache::thrift::Client&lt;aisearch::SUSearchService&gt;::future_ShardSearch (1,860,000,000 samples, 0.02%)</title><rect x="26.9" y="501" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="29.94" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (183,610,000,000 samples, 1.64%)</title><rect x="215.6" y="293" width="19.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="218.62" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_openat (6,090,000,000 samples, 0.05%)</title><rect x="23.5" y="533" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="26.46" y="543.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (1,010,000,000 samples, 0.01%)</title><rect x="305.2" y="453" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="308.15" y="463.5" ></text>
</g>
<g >
<title>[ai_index] (8,360,000,000 samples, 0.07%)</title><rect x="1065.0" y="453" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1068.00" y="463.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (9,940,000,000 samples, 0.09%)</title><rect x="81.1" y="213" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="84.11" y="223.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1,460,000,000 samples, 0.01%)</title><rect x="255.0" y="229" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="257.97" y="239.5" ></text>
</g>
<g >
<title>aisearch::SUSearchResult::write&lt;apache::thrift::CompactProtocolWriter&gt; (3,060,000,000 samples, 0.03%)</title><rect x="28.5" y="485" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="31.45" y="495.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (18,550,000,000 samples, 0.17%)</title><rect x="68.2" y="325" width="2.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="71.22" y="335.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (1,490,000,000 samples, 0.01%)</title><rect x="1042.9" y="325" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1045.89" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (16,680,000,000 samples, 0.15%)</title><rect x="1092.4" y="261" width="1.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1095.40" y="271.5" ></text>
</g>
<g >
<title>vfs_read (19,170,000,000 samples, 0.17%)</title><rect x="1009.0" y="261" width="2.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1012.04" y="271.5" ></text>
</g>
<g >
<title>GlassTable::find (22,910,000,000 samples, 0.20%)</title><rect x="80.7" y="405" width="2.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="83.73" y="415.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (1,190,000,000 samples, 0.01%)</title><rect x="1096.3" y="453" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1099.35" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::GetCurrentSpan (1,020,000,000 samples, 0.01%)</title><rect x="1162.0" y="485" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1165.01" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3,660,000,000 samples, 0.03%)</title><rect x="1040.1" y="357" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1043.10" y="367.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (7,050,000,000 samples, 0.06%)</title><rect x="1095.0" y="229" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1098.01" y="239.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1,000,000,000 samples, 0.01%)</title><rect x="242.0" y="181" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="245.03" y="191.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (1,780,000,000 samples, 0.02%)</title><rect x="261.6" y="261" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="264.61" y="271.5" ></text>
</g>
<g >
<title>[ai_index] (2,740,000,000 samples, 0.02%)</title><rect x="1155.5" y="485" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1158.54" y="495.5" ></text>
</g>
<g >
<title>GlassPostListTable::get_doclength (3,140,000,000 samples, 0.03%)</title><rect x="1042.2" y="437" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1045.16" y="447.5" ></text>
</g>
<g >
<title>rocksdb::DBImplReadOnly::Get (48,450,000,000 samples, 0.43%)</title><rect x="262.4" y="261" width="5.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="265.40" y="271.5" ></text>
</g>
<g >
<title>__strlen_evex (6,730,000,000 samples, 0.06%)</title><rect x="1069.8" y="453" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1072.76" y="463.5" ></text>
</g>
<g >
<title>__fget_light (3,720,000,000 samples, 0.03%)</title><rect x="631.1" y="277" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="634.08" y="287.5" ></text>
</g>
<g >
<title>__seccomp_filter (2,600,000,000 samples, 0.02%)</title><rect x="650.7" y="261" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="653.70" y="271.5" ></text>
</g>
<g >
<title>GlassTable::prev_for_sequential (10,330,000,000 samples, 0.09%)</title><rect x="241.2" y="373" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="244.20" y="383.5" ></text>
</g>
<g >
<title>OrPostList::next (20,090,000,000 samples, 0.18%)</title><rect x="1073.2" y="453" width="2.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1076.22" y="463.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryBranch::do_or_like (81,120,000,000 samples, 0.72%)</title><rect x="259.2" y="389" width="8.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="262.25" y="399.5" ></text>
</g>
<g >
<title>GlassTable::read_block (119,440,000,000 samples, 1.07%)</title><rect x="243.3" y="357" width="12.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="246.34" y="367.5" ></text>
</g>
<g >
<title>GlassTable::read_block (9,290,000,000 samples, 0.08%)</title><rect x="73.8" y="405" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="76.77" y="415.5" ></text>
</g>
<g >
<title>vfs_read (11,930,000,000 samples, 0.11%)</title><rect x="627.0" y="293" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="629.95" y="303.5" ></text>
</g>
<g >
<title>OrPostList::check (3,320,670,000,000 samples, 29.66%)</title><rect x="315.3" y="453" width="350.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="318.34" y="463.5" >OrPostList::check</text>
</g>
<g >
<title>[unknown] (1,000,000,000 samples, 0.01%)</title><rect x="11.5" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.52" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1,230,000,000 samples, 0.01%)</title><rect x="1041.0" y="373" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1044.01" y="383.5" ></text>
</g>
<g >
<title>GlassTable::read_tag (1,060,000,000 samples, 0.01%)</title><rect x="1037.6" y="373" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1040.63" y="383.5" ></text>
</g>
<g >
<title>IOThreadPool17 (1,420,000,000 samples, 0.01%)</title><rect x="12.1" y="613" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="15.14" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (17,590,000,000 samples, 0.16%)</title><rect x="1092.4" y="277" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1095.40" y="287.5" ></text>
</g>
<g >
<title>irqentry_exit (5,170,000,000 samples, 0.05%)</title><rect x="596.4" y="373" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="599.43" y="383.5" ></text>
</g>
<g >
<title>prometheus::detail::MetricsHandler::handleGet (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="485" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.40" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt;  (1,900,000,000 samples, 0.02%)</title><rect x="1164.8" y="453" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1167.82" y="463.5" ></text>
</g>
<g >
<title>[unknown] (3,610,000,000 samples, 0.03%)</title><rect x="1166.7" y="565" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1169.75" y="575.5" ></text>
</g>
<g >
<title>GlassTable::read_block (1,690,000,000 samples, 0.02%)</title><rect x="261.6" y="245" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="264.62" y="255.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (9,970,000,000 samples, 0.09%)</title><rect x="70.9" y="405" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="73.94" y="415.5" ></text>
</g>
<g >
<title>GlassPostList::jump_to (4,360,000,000 samples, 0.04%)</title><rect x="716.4" y="421" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="719.42" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,380,000,000 samples, 0.01%)</title><rect x="1042.9" y="261" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1045.90" y="271.5" ></text>
</g>
<g >
<title>eventfd_write (2,790,000,000 samples, 0.02%)</title><rect x="1166.8" y="453" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1169.77" y="463.5" ></text>
</g>
<g >
<title>[unknown] (980,000,000 samples, 0.01%)</title><rect x="11.4" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.37" y="607.5" ></text>
</g>
<g >
<title>touch_atime (6,860,000,000 samples, 0.06%)</title><rect x="991.2" y="165" width="0.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="994.24" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (25,160,000,000 samples, 0.22%)</title><rect x="75.2" y="341" width="2.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="78.20" y="351.5" ></text>
</g>
<g >
<title>[unknown] (26,070,000,000 samples, 0.23%)</title><rect x="20.6" y="581" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.58" y="591.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2,880,000,000 samples, 0.03%)</title><rect x="664.2" y="213" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="667.17" y="223.5" ></text>
</g>
<g >
<title>GlassPostList::get_docid (1,550,000,000 samples, 0.01%)</title><rect x="96.0" y="469" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="98.99" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,360,000,000 samples, 0.13%)</title><rect x="259.9" y="181" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="262.93" y="191.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1,710,000,000 samples, 0.02%)</title><rect x="261.1" y="53" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="264.09" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,250,000,000 samples, 0.03%)</title><rect x="664.7" y="325" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="667.69" y="335.5" ></text>
</g>
<g >
<title>vfs_read (18,340,000,000 samples, 0.16%)</title><rect x="1052.8" y="229" width="2.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1055.85" y="239.5" ></text>
</g>
<g >
<title>vfs_read (1,270,000,000 samples, 0.01%)</title><rect x="1042.9" y="229" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1045.90" y="239.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::ParseNextIndexKey (1,440,000,000 samples, 0.01%)</title><rect x="267.1" y="165" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="270.09" y="175.5" ></text>
</g>
<g >
<title>generic_file_read_iter (17,690,000,000 samples, 0.16%)</title><rect x="1009.1" y="213" width="1.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1012.14" y="223.5" ></text>
</g>
<g >
<title>filemap_read (163,650,000,000 samples, 1.46%)</title><rect x="632.3" y="229" width="17.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="635.32" y="239.5" ></text>
</g>
<g >
<title>__libc_pread (191,960,000,000 samples, 1.71%)</title><rect x="214.8" y="325" width="20.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="217.76" y="335.5" ></text>
</g>
<g >
<title>touch_atime (3,120,000,000 samples, 0.03%)</title><rect x="1033.8" y="181" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1036.84" y="191.5" ></text>
</g>
<g >
<title>GlassDatabase::open_post_list (1,800,000,000 samples, 0.02%)</title><rect x="259.4" y="325" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="262.45" y="335.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (165,990,000,000 samples, 1.48%)</title><rect x="42.2" y="229" width="17.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="45.16" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; const&amp;&gt; (970,000,000 samples, 0.01%)</title><rect x="1164.2" y="309" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1167.16" y="319.5" ></text>
</g>
<g >
<title>__fget_light (3,790,000,000 samples, 0.03%)</title><rect x="215.8" y="245" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="218.77" y="255.5" ></text>
</g>
<g >
<title>MultiAndPostList::~MultiAndPostList (2,030,000,000 samples, 0.02%)</title><rect x="1075.4" y="453" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1078.37" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (4,780,000,000 samples, 0.04%)</title><rect x="1189.4" y="357" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.40" y="367.5" ></text>
</g>
<g >
<title>rcu_all_qs (1,160,000,000 samples, 0.01%)</title><rect x="949.7" y="149" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="952.72" y="159.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1,240,000,000 samples, 0.01%)</title><rect x="1042.9" y="197" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1045.91" y="207.5" ></text>
</g>
<g >
<title>GlassTable::read_block (28,270,000,000 samples, 0.25%)</title><rect x="75.0" y="405" width="3.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="78.03" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_write (3,350,000,000 samples, 0.03%)</title><rect x="1166.7" y="549" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1169.75" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::MetricCollector::Collect (4,780,000,000 samples, 0.04%)</title><rect x="1189.4" y="341" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1192.40" y="351.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (5,170,000,000 samples, 0.05%)</title><rect x="596.4" y="357" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="599.43" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::TemporalMetricStorage::buildMetrics (3,370,000,000 samples, 0.03%)</title><rect x="1189.4" y="213" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.40" y="223.5" ></text>
</g>
<g >
<title>GlassTable::prev_for_sequential (9,360,000,000 samples, 0.08%)</title><rect x="73.8" y="421" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="76.77" y="431.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (2,600,000,000 samples, 0.02%)</title><rect x="255.6" y="277" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="258.60" y="287.5" ></text>
</g>
<g >
<title>__fdget (5,240,000,000 samples, 0.05%)</title><rect x="37.5" y="309" width="0.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="40.48" y="319.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (15,710,000,000 samples, 0.14%)</title><rect x="236.6" y="357" width="1.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="239.65" y="367.5" ></text>
</g>
<g >
<title>__libc_pread (7,300,000,000 samples, 0.07%)</title><rect x="705.4" y="357" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="708.41" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (19,010,000,000 samples, 0.17%)</title><rect x="1052.8" y="245" width="2.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1055.77" y="255.5" ></text>
</g>
<g >
<title>std::visit&lt;opentelemetry::v1::sdk::common::AttributeConverter&amp;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt;&amp;&gt; (1,510,000,000 samples, 0.01%)</title><rect x="1163.4" y="373" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1166.39" y="383.5" ></text>
</g>
<g >
<title>malloc (9,870,000,000 samples, 0.09%)</title><rect x="1183.3" y="597" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.27" y="607.5" ></text>
</g>
<g >
<title>GlassTable::prev_for_sequential (1,040,000,000 samples, 0.01%)</title><rect x="1094.7" y="357" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1097.72" y="367.5" ></text>
</g>
<g >
<title>fput_many (1,140,000,000 samples, 0.01%)</title><rect x="1015.2" y="261" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1018.24" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_timer_create (1,380,000,000 samples, 0.01%)</title><rect x="1189.1" y="549" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1192.06" y="559.5" ></text>
</g>
<g >
<title>[unknown] (3,360,000,000 samples, 0.03%)</title><rect x="1182.5" y="565" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.52" y="575.5" ></text>
</g>
<g >
<title>GlassTable::read_tag (4,200,000,000 samples, 0.04%)</title><rect x="256.0" y="373" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="258.95" y="383.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,330,000,000 samples, 0.01%)</title><rect x="77.9" y="341" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.86" y="351.5" ></text>
</g>
<g >
<title>__secure_computing (6,470,000,000 samples, 0.06%)</title><rect x="69.5" y="293" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="72.49" y="303.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (3,880,000,000 samples, 0.03%)</title><rect x="264.5" y="117" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="267.49" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,540,000,000 samples, 0.01%)</title><rect x="261.6" y="197" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="264.64" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt;, opentelemetry::v1::sdk::metrics::SyncMetricStorage::SyncMetricStorage (1,820,000,000 samples, 0.02%)</title><rect x="1164.8" y="405" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1167.83" y="415.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (38,860,000,000 samples, 0.35%)</title><rect x="1052.4" y="373" width="4.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1055.42" y="383.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (24,650,000,000 samples, 0.22%)</title><rect x="993.1" y="261" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="996.11" y="271.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (10,390,000,000 samples, 0.09%)</title><rect x="664.1" y="405" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="667.06" y="415.5" ></text>
</g>
<g >
<title>GlassPostList::current_chunk_contains (18,770,000,000 samples, 0.17%)</title><rect x="339.1" y="437" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="342.10" y="447.5" ></text>
</g>
<g >
<title>vfs_read (166,450,000,000 samples, 1.49%)</title><rect x="216.4" y="261" width="17.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="219.39" y="271.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (52,010,000,000 samples, 0.46%)</title><rect x="1002.6" y="341" width="5.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1005.65" y="351.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryAndLike::postlist (82,230,000,000 samples, 0.73%)</title><rect x="259.2" y="453" width="8.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="262.15" y="463.5" ></text>
</g>
<g >
<title>vfs_read (6,400,000,000 samples, 0.06%)</title><rect x="705.5" y="293" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="708.47" y="303.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (15,160,000,000 samples, 0.14%)</title><rect x="1092.5" y="213" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1095.53" y="223.5" ></text>
</g>
<g >
<title>filemap_read (5,810,000,000 samples, 0.05%)</title><rect x="704.3" y="229" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="707.26" y="239.5" ></text>
</g>
<g >
<title>MultiAndPostList::~MultiAndPostList (2,080,000,000 samples, 0.02%)</title><rect x="1075.4" y="469" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1078.37" y="479.5" ></text>
</g>
<g >
<title>__secure_computing (3,930,000,000 samples, 0.04%)</title><rect x="1035.5" y="245" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1038.49" y="255.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="261" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1192.78" y="271.5" ></text>
</g>
<g >
<title>__libc_pread (7,290,000,000 samples, 0.07%)</title><rect x="704.2" y="357" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="707.18" y="367.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (2,670,000,000 samples, 0.02%)</title><rect x="78.6" y="469" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="81.55" y="479.5" ></text>
</g>
<g >
<title>filemap_read (12,230,000,000 samples, 0.11%)</title><rect x="260.0" y="85" width="1.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="263.01" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,140,000,000 samples, 0.02%)</title><rect x="24.4" y="549" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="27.38" y="559.5" ></text>
</g>
<g >
<title>GlassPostList::next_in_chunk (8,670,000,000 samples, 0.08%)</title><rect x="1098.0" y="437" width="1.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1101.04" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,880,000,000 samples, 0.04%)</title><rect x="703.6" y="325" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="706.57" y="335.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (241,240,000,000 samples, 2.15%)</title><rect x="1012.0" y="373" width="25.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1014.99" y="383.5" >G..</text>
</g>
<g >
<title>filemap_get_read_batch (1,110,000,000 samples, 0.01%)</title><rect x="1095.6" y="165" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1098.62" y="175.5" ></text>
</g>
<g >
<title>__fget_light (1,390,000,000 samples, 0.01%)</title><rect x="38.0" y="309" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="41.03" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy (1,390,000,000 samples, 0.01%)</title><rect x="1164.1" y="389" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1167.15" y="399.5" ></text>
</g>
<g >
<title>generic_file_read_iter (7,610,000,000 samples, 0.07%)</title><rect x="73.9" y="277" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="76.86" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2,120,000,000 samples, 0.02%)</title><rect x="24.4" y="533" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.38" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,350,000,000 samples, 0.03%)</title><rect x="664.1" y="309" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="667.14" y="319.5" ></text>
</g>
<g >
<title>filemap_get_pages (20,820,000,000 samples, 0.19%)</title><rect x="613.5" y="197" width="2.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="616.53" y="207.5" ></text>
</g>
<g >
<title>GlassPostList::GlassPostList (1,770,000,000 samples, 0.02%)</title><rect x="259.4" y="309" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="262.45" y="319.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (27,370,000,000 samples, 0.24%)</title><rect x="646.1" y="197" width="2.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="649.08" y="207.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (2,100,000,000 samples, 0.02%)</title><rect x="1163.7" y="405" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1166.74" y="415.5" ></text>
</g>
<g >
<title>GlassCursor::get_key (1,320,000,000 samples, 0.01%)</title><rect x="242.5" y="389" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="245.53" y="399.5" ></text>
</g>
<g >
<title>read_start_of_chunk (4,610,000,000 samples, 0.04%)</title><rect x="1040.5" y="373" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1043.49" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::MeterContext::ForEachMeter (4,780,000,000 samples, 0.04%)</title><rect x="1189.4" y="405" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1192.40" y="415.5" ></text>
</g>
<g >
<title>copy_page_to_iter (6,160,000,000 samples, 0.06%)</title><rect x="633.1" y="213" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="636.11" y="223.5" ></text>
</g>
<g >
<title>Xapian::MiniRankWeight::clone (2,210,000,000 samples, 0.02%)</title><rect x="261.9" y="325" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="264.88" y="335.5" ></text>
</g>
<g >
<title>GlassPostListTable::get_doclength (113,280,000,000 samples, 1.01%)</title><rect x="1044.6" y="405" width="12.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1047.61" y="415.5" ></text>
</g>
<g >
<title>generic_file_read_iter (6,160,000,000 samples, 0.06%)</title><rect x="705.5" y="245" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="708.48" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="165" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.78" y="175.5" ></text>
</g>
<g >
<title>kl::otel::scopedSpanFromHeader (10,820,000,000 samples, 0.10%)</title><rect x="1161.2" y="517" width="1.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1164.18" y="527.5" ></text>
</g>
<g >
<title>GlassPostList::jump_to (5,800,000,000 samples, 0.05%)</title><rect x="1042.5" y="389" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1045.51" y="399.5" ></text>
</g>
<g >
<title>new_sync_read (17,740,000,000 samples, 0.16%)</title><rect x="1052.9" y="213" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1055.86" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt;  (1,850,000,000 samples, 0.02%)</title><rect x="1164.8" y="437" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1167.82" y="447.5" ></text>
</g>
<g >
<title>xas_start (1,010,000,000 samples, 0.01%)</title><rect x="1033.6" y="133" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1036.56" y="143.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2,080,000,000 samples, 0.02%)</title><rect x="211.4" y="341" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="214.40" y="351.5" ></text>
</g>
<g >
<title>GlassDatabase::get_doclength (5,890,000,000 samples, 0.05%)</title><rect x="1042.5" y="421" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1045.51" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::AttributesHashMap::~AttributesHashMap (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="197" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.78" y="207.5" ></text>
</g>
<g >
<title>kl::server::Handler::get_db (3,050,000,000 samples, 0.03%)</title><rect x="1162.9" y="517" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1165.88" y="527.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (2,350,000,000 samples, 0.02%)</title><rect x="258.7" y="421" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="261.74" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (18,490,000,000 samples, 0.17%)</title><rect x="1155.9" y="485" width="1.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1158.86" y="495.5" ></text>
</g>
<g >
<title>generic_file_read_iter (6,990,000,000 samples, 0.06%)</title><rect x="1095.0" y="213" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1098.01" y="223.5" ></text>
</g>
<g >
<title>Xapian::Database::reopen (2,730,000,000 samples, 0.02%)</title><rect x="1162.9" y="501" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1165.91" y="511.5" ></text>
</g>
<g >
<title>MultiMatch::get_mset (10,159,990,000,000 samples, 90.75%)</title><rect x="83.4" y="485" width="1070.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="86.43" y="495.5" >MultiMatch::get_mset</text>
</g>
<g >
<title>GlassPostList::~GlassPostList (1,000,000,000 samples, 0.01%)</title><rect x="706.5" y="421" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="709.49" y="431.5" ></text>
</g>
<g >
<title>apache::thrift::ServiceHandler&lt;aisearch::SUSearchService&gt;::async_tm_ShardSearch (10,802,220,000,000 samples, 96.49%)</title><rect x="27.8" y="549" width="1138.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="30.78" y="559.5" >apache::thrift::ServiceHandler&lt;aisearch::SUSearchService&gt;::async_tm_ShardSearch</text>
</g>
<g >
<title>filemap_get_pages (73,940,000,000 samples, 0.66%)</title><rect x="983.0" y="165" width="7.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="986.03" y="175.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_mask (1,350,000,000 samples, 0.01%)</title><rect x="24.4" y="373" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="27.43" y="383.5" ></text>
</g>
<g >
<title>check_tname_in_key_lite (1,250,000,000 samples, 0.01%)</title><rect x="660.0" y="405" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="663.01" y="415.5" ></text>
</g>
<g >
<title>__fget_files (3,490,000,000 samples, 0.03%)</title><rect x="631.1" y="261" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="634.10" y="271.5" ></text>
</g>
<g >
<title>current_time (1,010,000,000 samples, 0.01%)</title><rect x="233.4" y="149" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="236.38" y="159.5" ></text>
</g>
<g >
<title>vfs_read (15,870,000,000 samples, 0.14%)</title><rect x="1092.5" y="245" width="1.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1095.49" y="255.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryScaleWeight::get_description[abi:cxx11] (2,960,000,000 samples, 0.03%)</title><rect x="1159.7" y="469" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1162.67" y="479.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (3,620,000,000 samples, 0.03%)</title><rect x="265.2" y="165" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="268.23" y="175.5" ></text>
</g>
<g >
<title>process_new_connection (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="549" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1192.40" y="559.5" ></text>
</g>
<g >
<title>GlassTable::read_block (8,710,000,000 samples, 0.08%)</title><rect x="659.0" y="373" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="662.04" y="383.5" ></text>
</g>
<g >
<title>MultiMatch::getorrecalc_maxweight (2,160,000,000 samples, 0.02%)</title><rect x="1154.3" y="485" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1157.29" y="495.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (1,590,000,000 samples, 0.01%)</title><rect x="312.9" y="421" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="315.94" y="431.5" ></text>
</g>
<g >
<title>GlassPostList::jump_to (1,470,000,000 samples, 0.01%)</title><rect x="99.0" y="437" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="102.04" y="447.5" ></text>
</g>
<g >
<title>__fget_light (4,870,000,000 samples, 0.04%)</title><rect x="37.5" y="293" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="40.52" y="303.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (1,490,000,000 samples, 0.01%)</title><rect x="315.1" y="421" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="318.14" y="431.5" ></text>
</g>
<g >
<title>[unknown] (990,000,000 samples, 0.01%)</title><rect x="14.4" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.43" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="133" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1192.78" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="149" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1192.78" y="159.5" ></text>
</g>
<g >
<title>vfs_read (457,690,000,000 samples, 4.09%)</title><rect x="944.8" y="245" width="48.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="947.85" y="255.5" >vfs_..</text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (2,530,000,000 samples, 0.02%)</title><rect x="314.8" y="421" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="317.84" y="431.5" ></text>
</g>
<g >
<title>prometheus::detail::CollectMetrics (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="469" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1192.40" y="479.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (7,340,000,000 samples, 0.07%)</title><rect x="264.3" y="165" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="267.25" y="175.5" ></text>
</g>
<g >
<title>__libc_pread (14,450,000,000 samples, 0.13%)</title><rect x="626.8" y="357" width="1.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="629.81" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt;  (970,000,000 samples, 0.01%)</title><rect x="1164.0" y="437" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1167.02" y="447.5" ></text>
</g>
<g >
<title>CPUThreadPool75 (1,600,000,000 samples, 0.01%)</title><rect x="10.1" y="613" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="13.09" y="623.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3,630,000,000 samples, 0.03%)</title><rect x="10.4" y="517" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="13.36" y="527.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (6,400,000,000 samples, 0.06%)</title><rect x="255.2" y="293" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="258.20" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Version::Get (3,950,000,000 samples, 0.04%)</title><rect x="268.0" y="277" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="271.04" y="287.5" ></text>
</g>
<g >
<title>vfs_read (8,390,000,000 samples, 0.07%)</title><rect x="241.3" y="277" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="244.33" y="287.5" ></text>
</g>
<g >
<title>new_sync_read (7,870,000,000 samples, 0.07%)</title><rect x="241.4" y="261" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="244.35" y="271.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (37,630,000,000 samples, 0.34%)</title><rect x="1092.1" y="389" width="3.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1095.08" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::SyncMultiMetricStorage::RecordLong (6,670,000,000 samples, 0.06%)</title><rect x="1164.6" y="501" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1167.59" y="511.5" ></text>
</g>
<g >
<title>IOThreadPool11 (1,460,000,000 samples, 0.01%)</title><rect x="11.2" y="613" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="14.21" y="623.5" ></text>
</g>
<g >
<title>OrPostList::get_weight (138,210,000,000 samples, 1.23%)</title><rect x="1082.0" y="469" width="14.5" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1084.96" y="479.5" ></text>
</g>
<g >
<title>filemap_get_pages (1,770,000,000 samples, 0.02%)</title><rect x="659.7" y="213" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="662.69" y="223.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (1,970,000,000 samples, 0.02%)</title><rect x="261.6" y="277" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="264.60" y="287.5" ></text>
</g>
<g >
<title>new_sync_read (12,430,000,000 samples, 0.11%)</title><rect x="260.0" y="133" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="262.99" y="143.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, Xapian::Internal::MSetItem, __gnu_cxx::__ops::_Iter_comp_val&lt;bool  (1,890,000,000 samples, 0.02%)</title><rect x="1143.6" y="453" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.58" y="463.5" ></text>
</g>
<g >
<title>[unknown] (970,000,000 samples, 0.01%)</title><rect x="13.8" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.82" y="607.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (5,170,000,000 samples, 0.05%)</title><rect x="596.4" y="325" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="599.43" y="335.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2,640,000,000 samples, 0.02%)</title><rect x="703.6" y="213" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="706.64" y="223.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3,900,000,000 samples, 0.03%)</title><rect x="704.3" y="213" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="707.32" y="223.5" ></text>
</g>
<g >
<title>xas_load (21,320,000,000 samples, 0.19%)</title><rect x="988.5" y="133" width="2.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="991.50" y="143.5" ></text>
</g>
<g >
<title>__vfprintf_internal (13,650,000,000 samples, 0.12%)</title><rect x="25.2" y="581" width="1.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="28.20" y="591.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1,860,000,000 samples, 0.02%)</title><rect x="23.8" y="469" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="26.78" y="479.5" ></text>
</g>
<g >
<title>[unknown] (950,000,000 samples, 0.01%)</title><rect x="11.2" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.21" y="607.5" ></text>
</g>
<g >
<title>GlassDocument::do_get_value[abi:cxx11] (462,930,000,000 samples, 4.13%)</title><rect x="30.1" y="485" width="48.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="33.07" y="495.5" >Glas..</text>
</g>
<g >
<title>Xapian::MiniRankWeight::get_sumpart (6,780,000,000 samples, 0.06%)</title><rect x="1056.6" y="437" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1059.59" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::map (1,450,000,000 samples, 0.01%)</title><rect x="1164.1" y="421" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1167.14" y="431.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (1,280,000,000 samples, 0.01%)</title><rect x="314.9" y="405" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="317.93" y="415.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (115,630,000,000 samples, 1.03%)</title><rect x="633.8" y="213" width="12.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="636.76" y="223.5" ></text>
</g>
<g >
<title>Glass::compare&lt;Glass::LeafItem, Glass::LeafItem&gt; (6,190,000,000 samples, 0.06%)</title><rect x="618.0" y="357" width="0.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="620.98" y="367.5" ></text>
</g>
<g >
<title>new_sync_read (442,680,000,000 samples, 3.95%)</title><rect x="945.4" y="229" width="46.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="948.40" y="239.5" >new_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,810,000,000 samples, 0.08%)</title><rect x="73.8" y="373" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="76.82" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (11,660,000,000 samples, 0.10%)</title><rect x="1168.7" y="453" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1171.74" y="463.5" ></text>
</g>
<g >
<title>__fdget (4,450,000,000 samples, 0.04%)</title><rect x="1014.7" y="261" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1017.66" y="271.5" ></text>
</g>
<g >
<title>IOThreadPool5 (1,360,000,000 samples, 0.01%)</title><rect x="13.8" y="613" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="16.81" y="623.5" ></text>
</g>
<g >
<title>GlassTable::read_block (14,720,000,000 samples, 0.13%)</title><rect x="626.8" y="373" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="629.78" y="383.5" ></text>
</g>
<g >
<title>LeafPostList::get_weight (123,940,000,000 samples, 1.11%)</title><rect x="1083.0" y="453" width="13.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1086.02" y="463.5" ></text>
</g>
<g >
<title>GlassDatabase::get_doclength (122,820,000,000 samples, 1.10%)</title><rect x="1083.1" y="437" width="13.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1086.12" y="447.5" ></text>
</g>
<g >
<title>filemap_read (433,140,000,000 samples, 3.87%)</title><rect x="946.3" y="181" width="45.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="949.31" y="191.5" >file..</text>
</g>
<g >
<title>vfs_read (1,430,000,000 samples, 0.01%)</title><rect x="261.6" y="165" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="264.64" y="175.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (1,500,000,000 samples, 0.01%)</title><rect x="257.8" y="373" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="260.78" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (6,420,000,000 samples, 0.06%)</title><rect x="704.2" y="309" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="707.22" y="319.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3,670,000,000 samples, 0.03%)</title><rect x="933.3" y="325" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="936.33" y="335.5" ></text>
</g>
<g >
<title>generic_file_read_iter (164,930,000,000 samples, 1.47%)</title><rect x="632.2" y="245" width="17.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="635.21" y="255.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (1,350,000,000 samples, 0.01%)</title><rect x="266.1" y="133" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="269.07" y="143.5" ></text>
</g>
<g >
<title>GlassPostList::skip_to (43,760,000,000 samples, 0.39%)</title><rect x="660.6" y="421" width="4.6" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="663.55" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (180,710,000,000 samples, 1.61%)</title><rect x="631.0" y="309" width="19.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="633.95" y="319.5" ></text>
</g>
<g >
<title>filemap_read (2,810,000,000 samples, 0.03%)</title><rect x="664.7" y="213" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="667.72" y="223.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::AttributesHashMap::GetOrSetDefault (6,850,000,000 samples, 0.06%)</title><rect x="1163.7" y="469" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1166.72" y="479.5" ></text>
</g>
<g >
<title>atime_needs_update (2,130,000,000 samples, 0.02%)</title><rect x="649.3" y="197" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="652.34" y="207.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (40,140,000,000 samples, 0.36%)</title><rect x="341.1" y="437" width="4.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="344.09" y="447.5" ></text>
</g>
<g >
<title>Xapian::PostingIterator::Internal::check (15,260,000,000 samples, 0.14%)</title><rect x="706.6" y="453" width="1.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="709.60" y="463.5" ></text>
</g>
<g >
<title>GlassPostList::jump_to (3,053,970,000,000 samples, 27.28%)</title><rect x="719.7" y="405" width="321.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="722.68" y="415.5" >GlassPostList::jump_to</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,340,000,000 samples, 0.01%)</title><rect x="1158.6" y="469" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1161.59" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (293,170,000,000 samples, 2.62%)</title><rect x="37.3" y="325" width="30.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="40.30" y="335.5" >__..</text>
</g>
<g >
<title>__libc_pread (20,930,000,000 samples, 0.19%)</title><rect x="1052.7" y="293" width="2.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1055.69" y="303.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1,140,000,000 samples, 0.01%)</title><rect x="74.5" y="229" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="77.52" y="239.5" ></text>
</g>
<g >
<title>filemap_read (6,140,000,000 samples, 0.05%)</title><rect x="1055.6" y="181" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1058.61" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,380,000,000 samples, 0.01%)</title><rect x="1042.9" y="277" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1045.90" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (8,170,000,000 samples, 0.07%)</title><rect x="1187.2" y="597" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1190.19" y="607.5" ></text>
</g>
<g >
<title>fput_many (2,130,000,000 samples, 0.02%)</title><rect x="944.5" y="245" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="947.53" y="255.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, Xapian::Internal::MSetItem, __gnu_cxx::__ops::_Iter_comp_val&lt;bool  (26,960,000,000 samples, 0.24%)</title><rect x="1140.7" y="437" width="2.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.73" y="447.5" ></text>
</g>
<g >
<title>filemap_get_pages (1,180,000,000 samples, 0.01%)</title><rect x="1095.6" y="181" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1098.61" y="191.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::common::GetHashForAttributeMap (3,670,000,000 samples, 0.03%)</title><rect x="1163.3" y="469" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1166.33" y="479.5" ></text>
</g>
<g >
<title>GlassValueManager::get_value[abi:cxx11] (459,160,000,000 samples, 4.10%)</title><rect x="30.2" y="469" width="48.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="33.15" y="479.5" >Glas..</text>
</g>
<g >
<title>filemap_get_pages (1,120,000,000 samples, 0.01%)</title><rect x="242.0" y="197" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="245.02" y="207.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (13,920,000,000 samples, 0.12%)</title><rect x="313.4" y="421" width="1.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="316.37" y="431.5" ></text>
</g>
<g >
<title>OrPostList::next (1,420,000,000 samples, 0.01%)</title><rect x="1155.1" y="485" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1158.13" y="495.5" ></text>
</g>
<g >
<title>filemap_read (262,260,000,000 samples, 2.34%)</title><rect x="39.7" y="245" width="27.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="42.66" y="255.5" >f..</text>
</g>
<g >
<title>ksys_write (3,150,000,000 samples, 0.03%)</title><rect x="1166.8" y="485" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1169.76" y="495.5" ></text>
</g>
<g >
<title>filemap_read (6,150,000,000 samples, 0.05%)</title><rect x="705.5" y="229" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="708.49" y="239.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4,410,000,000 samples, 0.04%)</title><rect x="1055.7" y="165" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1058.67" y="175.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, Xapian::Internal::MSetItem, __gnu_cxx::__ops::_Iter_comp_val&lt;bool  (98,190,000,000 samples, 0.88%)</title><rect x="1143.8" y="469" width="10.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.77" y="479.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (3,480,000,000 samples, 0.03%)</title><rect x="664.7" y="373" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="667.67" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::common::GetHashForAttributeMap (1,080,000,000 samples, 0.01%)</title><rect x="1164.6" y="469" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1167.60" y="479.5" ></text>
</g>
<g >
<title>__libc_pread (20,260,000,000 samples, 0.18%)</title><rect x="80.8" y="357" width="2.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="83.82" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (8,830,000,000 samples, 0.08%)</title><rect x="241.3" y="293" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="244.28" y="303.5" ></text>
</g>
<g >
<title>do_open (1,610,000,000 samples, 0.01%)</title><rect x="23.6" y="469" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="26.59" y="479.5" ></text>
</g>
<g >
<title>MultiAndPostList::at_end (2,510,000,000 samples, 0.02%)</title><rect x="79.2" y="485" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="82.18" y="495.5" ></text>
</g>
<g >
<title>[ai_index] (3,570,000,000 samples, 0.03%)</title><rect x="998.8" y="341" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1001.78" y="351.5" ></text>
</g>
<g >
<title>rw_verify_area (4,730,000,000 samples, 0.04%)</title><rect x="1034.2" y="245" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1037.21" y="255.5" ></text>
</g>
<g >
<title>IOThreadPool10 (1,460,000,000 samples, 0.01%)</title><rect x="11.1" y="613" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="14.06" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (1,320,000,000 samples, 0.01%)</title><rect x="1042.9" y="245" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1045.90" y="255.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (132,340,000,000 samples, 1.18%)</title><rect x="242.7" y="389" width="13.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="245.67" y="399.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Lookup (3,350,000,000 samples, 0.03%)</title><rect x="264.5" y="101" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="267.54" y="111.5" ></text>
</g>
<g >
<title>GlassTable::read_block (148,790,000,000 samples, 1.33%)</title><rect x="601.5" y="357" width="15.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="604.55" y="367.5" ></text>
</g>
<g >
<title>__fget_light (9,920,000,000 samples, 0.09%)</title><rect x="943.2" y="229" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="946.19" y="239.5" ></text>
</g>
<g >
<title>__fdget (2,980,000,000 samples, 0.03%)</title><rect x="602.4" y="277" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="605.43" y="287.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (165,850,000,000 samples, 1.48%)</title><rect x="632.1" y="261" width="17.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="635.11" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (112,300,000,000 samples, 1.00%)</title><rect x="244.1" y="309" width="11.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="247.05" y="319.5" ></text>
</g>
<g >
<title>filemap_read (960,000,000 samples, 0.01%)</title><rect x="314.9" y="229" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="317.95" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;opentelemetry::v1::sdk::metrics::AttributesHashMap&gt;::~shared_ptr (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="293" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1192.78" y="303.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (7,860,000,000 samples, 0.07%)</title><rect x="69.3" y="309" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="72.34" y="319.5" ></text>
</g>
<g >
<title>folly::CPUThreadPoolExecutor::~CPUThreadPoolExecutor (950,000,000 samples, 0.01%)</title><rect x="10.1" y="581" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.12" y="591.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1,330,000,000 samples, 0.01%)</title><rect x="313.0" y="277" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="315.96" y="287.5" ></text>
</g>
<g >
<title>ThriftIO17 (1,420,000,000 samples, 0.01%)</title><rect x="15.4" y="613" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="18.36" y="623.5" ></text>
</g>
<g >
<title>GlassPostList::skip_to (2,987,110,000,000 samples, 26.68%)</title><rect x="345.5" y="437" width="314.9" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="348.51" y="447.5" >GlassPostList::skip_to</text>
</g>
<g >
<title>GlassPostList::next (2,060,000,000 samples, 0.02%)</title><rect x="96.4" y="469" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="99.43" y="479.5" ></text>
</g>
<g >
<title>IOThreadPool7 (1,490,000,000 samples, 0.01%)</title><rect x="14.1" y="613" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="17.11" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,750,000,000 samples, 0.12%)</title><rect x="626.9" y="341" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="629.88" y="351.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (9,670,000,000 samples, 0.09%)</title><rect x="1094.9" y="373" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1097.86" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (3,470,000,000 samples, 0.03%)</title><rect x="1163.3" y="437" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1166.34" y="447.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Get (5,550,000,000 samples, 0.05%)</title><rect x="262.6" y="197" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="265.57" y="207.5" ></text>
</g>
<g >
<title>msetcmp_by_relevance&lt;true&gt; (8,600,000,000 samples, 0.08%)</title><rect x="1139.8" y="437" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1142.83" y="447.5" ></text>
</g>
<g >
<title>__libc_pread (9,130,000,000 samples, 0.08%)</title><rect x="73.8" y="389" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="76.78" y="399.5" ></text>
</g>
<g >
<title>GlassTable::get_exact_entry (23,150,000,000 samples, 0.21%)</title><rect x="80.7" y="421" width="2.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="83.73" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (1,380,000,000 samples, 0.01%)</title><rect x="313.0" y="325" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="315.96" y="335.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;bool  (1,570,000,000 samples, 0.01%)</title><rect x="1154.1" y="469" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1157.12" y="479.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (980,000,000 samples, 0.01%)</title><rect x="314.9" y="261" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="317.95" y="271.5" ></text>
</g>
<g >
<title>filemap_read (2,880,000,000 samples, 0.03%)</title><rect x="664.2" y="197" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="667.17" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,260,000,000 samples, 0.07%)</title><rect x="1095.0" y="293" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1097.95" y="303.5" ></text>
</g>
<g >
<title>Glass::compare&lt;Glass::LeafItem, Glass::LeafItem&gt; (990,000,000 samples, 0.01%)</title><rect x="938.2" y="341" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="941.21" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::operator[] (1,190,000,000 samples, 0.01%)</title><rect x="1163.8" y="357" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1166.79" y="367.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (11,730,000,000 samples, 0.10%)</title><rect x="1009.4" y="181" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1012.38" y="191.5" ></text>
</g>
<g >
<title>__secure_computing (2,070,000,000 samples, 0.02%)</title><rect x="255.7" y="261" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="258.66" y="271.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4,200,000,000 samples, 0.04%)</title><rect x="703.6" y="261" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="706.60" y="271.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::MetricReader::Collect (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="437" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1192.40" y="447.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (28,070,000,000 samples, 0.25%)</title><rect x="1052.5" y="357" width="3.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1055.51" y="367.5" ></text>
</g>
<g >
<title>do_madvise.part.0 (2,090,000,000 samples, 0.02%)</title><rect x="24.4" y="517" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="27.38" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::KeyValueIterableView&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::ForEachKeyValue (1,030,000,000 samples, 0.01%)</title><rect x="1164.6" y="453" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1167.60" y="463.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1,360,000,000 samples, 0.01%)</title><rect x="261.6" y="133" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="264.64" y="143.5" ></text>
</g>
<g >
<title>filemap_read (17,370,000,000 samples, 0.16%)</title><rect x="1052.9" y="165" width="1.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1055.89" y="175.5" ></text>
</g>
<g >
<title>rw_verify_area (2,600,000,000 samples, 0.02%)</title><rect x="254.9" y="261" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="257.90" y="271.5" ></text>
</g>
<g >
<title>current_time (2,570,000,000 samples, 0.02%)</title><rect x="991.6" y="133" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="994.61" y="143.5" ></text>
</g>
<g >
<title>new_sync_read (15,280,000,000 samples, 0.14%)</title><rect x="1092.5" y="229" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1095.52" y="239.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (4,140,000,000 samples, 0.04%)</title><rect x="1165.5" y="421" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1168.46" y="431.5" ></text>
</g>
<g >
<title>atime_needs_update (2,070,000,000 samples, 0.02%)</title><rect x="233.3" y="165" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="236.28" y="175.5" ></text>
</g>
<g >
<title>Xapian::Internal::MSetItem::operator= (1,500,000,000 samples, 0.01%)</title><rect x="1155.3" y="485" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1158.29" y="495.5" ></text>
</g>
<g >
<title>apache::thrift::Client&lt;aisearch::SUSearchService&gt;::ShardSearch (1,760,000,000 samples, 0.02%)</title><rect x="26.9" y="485" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="29.94" y="495.5" ></text>
</g>
<g >
<title>IOThreadPool15 (1,510,000,000 samples, 0.01%)</title><rect x="11.8" y="613" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="14.83" y="623.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::Get (5,820,000,000 samples, 0.05%)</title><rect x="262.5" y="229" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="265.55" y="239.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1,360,000,000 samples, 0.01%)</title><rect x="261.6" y="117" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="264.64" y="127.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, Xapian::Internal::MSetItem, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool  (1,540,000,000 samples, 0.01%)</title><rect x="1112.0" y="453" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1115.00" y="463.5" ></text>
</g>
<g >
<title>GlassTable::read_block (7,660,000,000 samples, 0.07%)</title><rect x="1055.5" y="325" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1058.52" y="335.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (1,110,000,000 samples, 0.01%)</title><rect x="1094.4" y="341" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1097.37" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,680,000,000 samples, 0.13%)</title><rect x="1168.6" y="565" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.56" y="575.5" ></text>
</g>
<g >
<title>__secure_computing (7,840,000,000 samples, 0.07%)</title><rect x="994.9" y="229" width="0.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="997.88" y="239.5" ></text>
</g>
<g >
<title>ThriftIO6 (1,430,000,000 samples, 0.01%)</title><rect x="18.4" y="613" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="21.44" y="623.5" ></text>
</g>
<g >
<title>generic_fadvise (1,430,000,000 samples, 0.01%)</title><rect x="80.4" y="373" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="83.45" y="383.5" ></text>
</g>
<g >
<title>[unknown] (3,650,000,000 samples, 0.03%)</title><rect x="10.4" y="549" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.36" y="559.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (19,760,000,000 samples, 0.18%)</title><rect x="310.7" y="437" width="2.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="313.73" y="447.5" ></text>
</g>
<g >
<title>seccomp_run_filters (1,230,000,000 samples, 0.01%)</title><rect x="650.8" y="245" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="653.84" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,360,000,000 samples, 0.07%)</title><rect x="659.1" y="341" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="662.08" y="351.5" ></text>
</g>
<g >
<title>ThriftIO22 (1,450,000,000 samples, 0.01%)</title><rect x="16.1" y="613" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="19.08" y="623.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryOr::get_description[abi:cxx11] (2,500,000,000 samples, 0.02%)</title><rect x="1159.7" y="453" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1162.70" y="463.5" ></text>
</g>
<g >
<title>kl::server::Handler::sync_ShardSearch (10,786,660,000,000 samples, 96.35%)</title><rect x="29.2" y="533" width="1136.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="32.20" y="543.5" >kl::server::Handler::sync_ShardSearch</text>
</g>
<g >
<title>apache::thrift::GeneratedAsyncProcessorBase::serializeResponseImpl&lt;apache::thrift::SerializedResponse, apache::thrift::CompactProtocolWriter, apache::thrift::ThriftPresult&lt;true, apache::thrift::FieldData&lt; (3,850,000,000 samples, 0.03%)</title><rect x="28.4" y="501" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="31.37" y="511.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (5,170,000,000 samples, 0.05%)</title><rect x="596.4" y="389" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="599.43" y="399.5" ></text>
</g>
<g >
<title>MultiMatch::MultiMatch (31,940,000,000 samples, 0.29%)</title><rect x="80.1" y="485" width="3.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="83.07" y="495.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryAndLike::postlist_sub_and_like (81,820,000,000 samples, 0.73%)</title><rect x="259.2" y="437" width="8.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="262.19" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (24,490,000,000 samples, 0.22%)</title><rect x="1108.8" y="469" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1111.83" y="479.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2,830,000,000 samples, 0.03%)</title><rect x="664.7" y="245" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="667.71" y="255.5" ></text>
</g>
<g >
<title>GlassValueManager::get_chunk_containing_did (422,860,000,000 samples, 3.78%)</title><rect x="33.7" y="453" width="44.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="36.75" y="463.5" >Glas..</text>
</g>
<g >
<title>__libc_pread (329,190,000,000 samples, 2.94%)</title><rect x="35.6" y="373" width="34.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="38.58" y="383.5" >__..</text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (990,000,000 samples, 0.01%)</title><rect x="83.0" y="389" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="86.04" y="399.5" ></text>
</g>
<g >
<title>__libc_pread (1,640,000,000 samples, 0.01%)</title><rect x="261.6" y="229" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="264.63" y="239.5" ></text>
</g>
<g >
<title>new_sync_read (7,790,000,000 samples, 0.07%)</title><rect x="73.8" y="309" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="76.84" y="319.5" ></text>
</g>
<g >
<title>ThriftIO12 (1,430,000,000 samples, 0.01%)</title><rect x="14.8" y="613" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="17.76" y="623.5" ></text>
</g>
<g >
<title>aa_file_perm (2,690,000,000 samples, 0.02%)</title><rect x="992.5" y="181" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="995.51" y="191.5" ></text>
</g>
<g >
<title>generic_file_read_iter (94,730,000,000 samples, 0.85%)</title><rect x="244.9" y="229" width="10.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="247.90" y="239.5" ></text>
</g>
<g >
<title>GlassTable::read_block (20,480,000,000 samples, 0.18%)</title><rect x="80.8" y="373" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="83.80" y="383.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (4,710,000,000 samples, 0.04%)</title><rect x="1035.4" y="261" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1038.40" y="271.5" ></text>
</g>
<g >
<title>[unknown] (960,000,000 samples, 0.01%)</title><rect x="12.0" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.99" y="607.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUHandleTable::FindPointer (1,690,000,000 samples, 0.02%)</title><rect x="264.7" y="69" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="267.71" y="79.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (2,780,000,000 samples, 0.02%)</title><rect x="1065.9" y="453" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1068.88" y="463.5" ></text>
</g>
<g >
<title>common_interrupt (1,020,000,000 samples, 0.01%)</title><rect x="596.3" y="389" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="599.31" y="399.5" ></text>
</g>
<g >
<title>folly::LogMessage::sanitizeMessage (1,140,000,000 samples, 0.01%)</title><rect x="21.6" y="565" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="24.56" y="575.5" ></text>
</g>
<g >
<title>GlassPostListTable::get_freqs (23,510,000,000 samples, 0.21%)</title><rect x="80.7" y="437" width="2.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="83.70" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,430,000,000 samples, 0.01%)</title><rect x="313.0" y="357" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="315.96" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,410,000,000 samples, 0.01%)</title><rect x="1189.1" y="565" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.06" y="575.5" ></text>
</g>
<g >
<title>apache::thrift::detail::deserializeRequestBody&lt;apache::thrift::CompactProtocolReader, apache::thrift::ThriftPresult&lt;false, apache::thrift::FieldData&lt; (3,410,000,000 samples, 0.03%)</title><rect x="27.4" y="533" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="30.38" y="543.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (1,230,000,000 samples, 0.01%)</title><rect x="80.5" y="341" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="83.46" y="351.5" ></text>
</g>
<g >
<title>worker_thread_run (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="565" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1192.40" y="575.5" ></text>
</g>
<g >
<title>new_sync_read (124,020,000,000 samples, 1.11%)</title><rect x="603.0" y="261" width="13.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="606.04" y="271.5" ></text>
</g>
<g >
<title>rw_verify_area (9,300,000,000 samples, 0.08%)</title><rect x="992.1" y="229" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="995.06" y="239.5" ></text>
</g>
<g >
<title>__fget_light (950,000,000 samples, 0.01%)</title><rect x="631.5" y="293" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="634.48" y="303.5" ></text>
</g>
<g >
<title>ThriftIO30 (1,440,000,000 samples, 0.01%)</title><rect x="17.3" y="613" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="20.32" y="623.5" ></text>
</g>
<g >
<title>GlassPostList::current_chunk_contains (12,380,000,000 samples, 0.11%)</title><rect x="677.6" y="437" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="680.57" y="447.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1,000,000,000 samples, 0.01%)</title><rect x="703.9" y="197" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="706.92" y="207.5" ></text>
</g>
<g >
<title>generic_file_read_iter (10,920,000,000 samples, 0.10%)</title><rect x="627.0" y="245" width="1.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="630.01" y="255.5" ></text>
</g>
<g >
<title>[unknown] (980,000,000 samples, 0.01%)</title><rect x="12.3" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.29" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3,380,000,000 samples, 0.03%)</title><rect x="1157.8" y="485" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1160.81" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::SyncMetricStorage::RecordLong (11,690,000,000 samples, 0.10%)</title><rect x="1163.3" y="485" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1166.31" y="495.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (3,030,000,000 samples, 0.03%)</title><rect x="28.8" y="533" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="31.81" y="543.5" ></text>
</g>
<g >
<title>kl::server::Handler::get_termfreq (4,740,000,000 samples, 0.04%)</title><rect x="268.0" y="357" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="270.97" y="367.5" ></text>
</g>
<g >
<title>filemap_read (7,350,000,000 samples, 0.07%)</title><rect x="659.1" y="229" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="662.13" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (502,820,000,000 samples, 4.49%)</title><rect x="942.8" y="277" width="53.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="945.79" y="287.5" >do_sy..</text>
</g>
<g >
<title>GlassCursor::read_tag (31,600,000,000 samples, 0.28%)</title><rect x="74.8" y="437" width="3.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="77.85" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::Meter::Collect (4,780,000,000 samples, 0.04%)</title><rect x="1189.4" y="325" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1192.40" y="335.5" ></text>
</g>
<g >
<title>ThriftIO16 (1,390,000,000 samples, 0.01%)</title><rect x="15.2" y="613" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="18.22" y="623.5" ></text>
</g>
<g >
<title>kl::server::Handler::get_termfreq (49,830,000,000 samples, 0.45%)</title><rect x="262.3" y="309" width="5.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="265.29" y="319.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (6,540,000,000 samples, 0.06%)</title><rect x="618.7" y="357" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="621.69" y="367.5" ></text>
</g>
<g >
<title>apache::thrift::HandlerCallback&lt;std::unique_ptr&lt;aisearch::SUSearchResult, std::default_delete&lt;aisearch::SUSearchResult&gt; &gt; &gt;::complete (3,220,000,000 samples, 0.03%)</title><rect x="1182.5" y="517" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1185.53" y="527.5" ></text>
</g>
<g >
<title>GlassTable::prev_for_sequential (14,940,000,000 samples, 0.13%)</title><rect x="626.8" y="389" width="1.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="629.76" y="399.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (21,010,000,000 samples, 0.19%)</title><rect x="80.7" y="389" width="2.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="83.74" y="399.5" ></text>
</g>
<g >
<title>__fget_light (2,390,000,000 samples, 0.02%)</title><rect x="944.2" y="245" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="947.23" y="255.5" ></text>
</g>
<g >
<title>__libc_pread (1,020,000,000 samples, 0.01%)</title><rect x="1094.7" y="325" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1097.73" y="335.5" ></text>
</g>
<g >
<title>new_sync_read (167,570,000,000 samples, 1.50%)</title><rect x="631.9" y="277" width="17.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="634.95" y="287.5" ></text>
</g>
<g >
<title>MultiAndPostList::next (38,790,000,000 samples, 0.35%)</title><rect x="1071.3" y="469" width="4.0" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1074.26" y="479.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (8,950,000,000 samples, 0.08%)</title><rect x="659.0" y="389" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="662.02" y="399.5" ></text>
</g>
<g >
<title>filemap_get_pages (1,050,000,000 samples, 0.01%)</title><rect x="703.9" y="213" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="706.92" y="223.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (82,320,000,000 samples, 0.74%)</title><rect x="1083.4" y="389" width="8.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1086.40" y="399.5" ></text>
</g>
<g >
<title>touch_atime (2,480,000,000 samples, 0.02%)</title><rect x="649.3" y="213" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="652.31" y="223.5" ></text>
</g>
<g >
<title>copy_page_to_iter (14,960,000,000 samples, 0.13%)</title><rect x="948.3" y="165" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="951.27" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (13,300,000,000 samples, 0.12%)</title><rect x="1185.8" y="597" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1188.79" y="607.5" ></text>
</g>
<g >
<title>__libc_pread (27,920,000,000 samples, 0.25%)</title><rect x="75.1" y="389" width="2.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="78.06" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (2,330,000,000 samples, 0.02%)</title><rect x="1165.6" y="405" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1168.55" y="415.5" ></text>
</g>
<g >
<title>__isoc99_sscanf (2,050,000,000 samples, 0.02%)</title><rect x="24.2" y="581" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="27.16" y="591.5" ></text>
</g>
<g >
<title>GlassTable::read_block (532,030,000,000 samples, 4.75%)</title><rect x="939.9" y="325" width="56.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="942.88" y="335.5" >Glass..</text>
</g>
<g >
<title>do_syscall_64 (3,280,000,000 samples, 0.03%)</title><rect x="1166.8" y="517" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1169.76" y="527.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,020,000,000 samples, 0.02%)</title><rect x="233.6" y="213" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="236.63" y="223.5" ></text>
</g>
<g >
<title>CPUThreadPool76 (5,950,000,000 samples, 0.05%)</title><rect x="10.3" y="613" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="13.26" y="623.5" ></text>
</g>
<g >
<title>filemap_read (14,960,000,000 samples, 0.13%)</title><rect x="1092.5" y="181" width="1.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1095.55" y="191.5" ></text>
</g>
<g >
<title>__libc_pread (8,620,000,000 samples, 0.08%)</title><rect x="659.0" y="357" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="662.05" y="367.5" ></text>
</g>
<g >
<title>GlassPostList::next_in_chunk (1,250,000,000 samples, 0.01%)</title><rect x="1073.0" y="437" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1076.03" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1,470,000,000 samples, 0.01%)</title><rect x="1166.6" y="565" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1169.59" y="575.5" ></text>
</g>
<g >
<title>new_sync_read (5,930,000,000 samples, 0.05%)</title><rect x="704.2" y="277" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="707.25" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,370,000,000 samples, 0.13%)</title><rect x="259.9" y="197" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="262.93" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (5,170,000,000 samples, 0.05%)</title><rect x="596.4" y="405" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="599.43" y="415.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (11,670,000,000 samples, 0.10%)</title><rect x="1168.7" y="469" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1171.74" y="479.5" ></text>
</g>
<g >
<title>GlassTable::read_block (950,000,000 samples, 0.01%)</title><rect x="259.5" y="229" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="262.47" y="239.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::SeekImpl (9,070,000,000 samples, 0.08%)</title><rect x="266.3" y="181" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="269.29" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1,100,000,000 samples, 0.01%)</title><rect x="258.5" y="389" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="261.48" y="399.5" ></text>
</g>
<g >
<title>new_sync_read (160,820,000,000 samples, 1.44%)</title><rect x="216.6" y="245" width="17.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="219.60" y="255.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (6,770,000,000 samples, 0.06%)</title><rect x="627.2" y="213" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="630.16" y="223.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (33,080,000,000 samples, 0.30%)</title><rect x="999.2" y="341" width="3.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1002.15" y="351.5" ></text>
</g>
<g >
<title>check_tname_in_key_lite (1,010,000,000 samples, 0.01%)</title><rect x="706.2" y="405" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="709.22" y="415.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (2,290,000,000 samples, 0.02%)</title><rect x="1042.9" y="373" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1045.88" y="383.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (1,020,000,000 samples, 0.01%)</title><rect x="1055.0" y="325" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1058.01" y="335.5" ></text>
</g>
<g >
<title>__fget_light (2,920,000,000 samples, 0.03%)</title><rect x="602.4" y="261" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="605.44" y="271.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1,980,000,000 samples, 0.02%)</title><rect x="627.9" y="197" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="630.88" y="207.5" ></text>
</g>
<g >
<title>GlassTable::read_block (18,790,000,000 samples, 0.17%)</title><rect x="1092.3" y="325" width="2.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1095.28" y="335.5" ></text>
</g>
<g >
<title>GlassTable::read_block (194,980,000,000 samples, 1.74%)</title><rect x="214.5" y="341" width="20.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="217.50" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt;  (990,000,000 samples, 0.01%)</title><rect x="1164.0" y="453" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1167.01" y="463.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (8,210,000,000 samples, 0.07%)</title><rect x="704.1" y="405" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="707.11" y="415.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (5,100,000,000 samples, 0.05%)</title><rect x="20.0" y="581" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="23.02" y="591.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (718,700,000,000 samples, 6.42%)</title><rect x="935.9" y="373" width="75.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="938.92" y="383.5" >GlassCur..</text>
</g>
<g >
<title>populate_seccomp_data (1,020,000,000 samples, 0.01%)</title><rect x="69.7" y="261" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="72.74" y="271.5" ></text>
</g>
<g >
<title>ThriftIO29 (1,380,000,000 samples, 0.01%)</title><rect x="17.1" y="613" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="20.12" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (7,760,000,000 samples, 0.07%)</title><rect x="1095.0" y="277" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1097.95" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,250,000,000 samples, 0.03%)</title><rect x="664.7" y="309" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="667.69" y="319.5" ></text>
</g>
<g >
<title>IOThreadPool16 (1,390,000,000 samples, 0.01%)</title><rect x="12.0" y="613" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="14.99" y="623.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (7,490,000,000 samples, 0.07%)</title><rect x="705.4" y="389" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="708.39" y="399.5" ></text>
</g>
<g >
<title>xas_load (6,650,000,000 samples, 0.06%)</title><rect x="232.4" y="149" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="235.39" y="159.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool  (2,240,000,000 samples, 0.02%)</title><rect x="1111.7" y="469" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1114.70" y="479.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1,220,000,000 samples, 0.01%)</title><rect x="1042.9" y="181" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1045.91" y="191.5" ></text>
</g>
<g >
<title>LocalSubMatch::prepare_match (26,000,000,000 samples, 0.23%)</title><rect x="80.6" y="469" width="2.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="83.65" y="479.5" ></text>
</g>
<g >
<title>GlassTable::read_block (1,190,000,000 samples, 0.01%)</title><rect x="314.9" y="373" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="317.94" y="383.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool  (299,890,000,000 samples, 2.68%)</title><rect x="1112.2" y="469" width="31.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1115.17" y="479.5" >st..</text>
</g>
<g >
<title>check_tname_in_key_lite (2,180,000,000 samples, 0.02%)</title><rect x="256.8" y="389" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="259.84" y="399.5" ></text>
</g>
<g >
<title>do_filp_open (5,090,000,000 samples, 0.05%)</title><rect x="23.5" y="501" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="26.47" y="511.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (7,870,000,000 samples, 0.07%)</title><rect x="705.4" y="405" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="708.38" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1,900,000,000 samples, 0.02%)</title><rect x="1037.0" y="357" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1040.04" y="367.5" ></text>
</g>
<g >
<title>apparmor_file_permission (5,370,000,000 samples, 0.05%)</title><rect x="992.3" y="197" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="995.28" y="207.5" ></text>
</g>
<g >
<title>ThriftIO26 (1,440,000,000 samples, 0.01%)</title><rect x="16.7" y="613" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="19.68" y="623.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (115,670,000,000 samples, 1.03%)</title><rect x="218.3" y="181" width="12.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="221.31" y="191.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, Xapian::Internal::MSetItem, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool  (1,620,000,000 samples, 0.01%)</title><rect x="1108.7" y="469" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1111.65" y="479.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (1,000,000,000 samples, 0.01%)</title><rect x="259.5" y="245" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="262.46" y="255.5" ></text>
</g>
<g >
<title>GlassPostList::open_nearby_postlist (21,150,000,000 samples, 0.19%)</title><rect x="259.6" y="325" width="2.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="262.65" y="335.5" ></text>
</g>
<g >
<title>GlassPostListTable::get_doclength (3,086,050,000,000 samples, 27.57%)</title><rect x="716.9" y="421" width="325.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="719.88" y="431.5" >GlassPostListTable::get_doclength</text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,060,000,000 samples, 0.10%)</title><rect x="1034.7" y="277" width="1.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1037.73" y="287.5" ></text>
</g>
<g >
<title>seccomp_run_filters (1,040,000,000 samples, 0.01%)</title><rect x="234.8" y="213" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="237.80" y="223.5" ></text>
</g>
<g >
<title>do_dentry_open (1,250,000,000 samples, 0.01%)</title><rect x="23.6" y="437" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="26.62" y="447.5" ></text>
</g>
<g >
<title>vfs_read (6,180,000,000 samples, 0.06%)</title><rect x="704.2" y="293" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="707.24" y="303.5" ></text>
</g>
<g >
<title>hack_digit (2,340,000,000 samples, 0.02%)</title><rect x="26.4" y="565" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="29.39" y="575.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (25,480,000,000 samples, 0.23%)</title><rect x="678.9" y="437" width="2.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="681.88" y="447.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (1,049,110,000,000 samples, 9.37%)</title><rect x="101.0" y="405" width="110.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="104.04" y="415.5" >GlassPostList..</text>
</g>
<g >
<title>OrPostList::skip_to (390,210,000,000 samples, 3.49%)</title><rect x="665.4" y="453" width="41.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="668.36" y="463.5" >OrP..</text>
</g>
<g >
<title>vfs_write (1,260,000,000 samples, 0.01%)</title><rect x="1166.6" y="469" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1169.61" y="479.5" ></text>
</g>
<g >
<title>new_sync_read (11,310,000,000 samples, 0.10%)</title><rect x="627.0" y="277" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="629.97" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (1,380,000,000 samples, 0.01%)</title><rect x="1164.1" y="373" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1167.15" y="383.5" ></text>
</g>
<g >
<title>generic_file_read_iter (173,010,000,000 samples, 1.55%)</title><rect x="1016.0" y="213" width="18.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1018.96" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,900,000,000 samples, 0.06%)</title><rect x="704.2" y="325" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="707.22" y="335.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (9,710,000,000 samples, 0.09%)</title><rect x="1104.2" y="469" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1107.21" y="479.5" ></text>
</g>
<g >
<title>civetweb-worker (5,320,000,000 samples, 0.05%)</title><rect x="1189.3" y="613" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.34" y="623.5" ></text>
</g>
<g >
<title>xas_start (1,060,000,000 samples, 0.01%)</title><rect x="648.8" y="165" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="651.84" y="175.5" ></text>
</g>
<g >
<title>vfs_read (3,040,000,000 samples, 0.03%)</title><rect x="664.2" y="261" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="667.16" y="271.5" ></text>
</g>
<g >
<title>filemap_read (4,120,000,000 samples, 0.04%)</title><rect x="703.6" y="229" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="706.61" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,430,000,000 samples, 0.01%)</title><rect x="313.0" y="341" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="315.96" y="351.5" ></text>
</g>
<g >
<title>ksys_write (14,160,000,000 samples, 0.13%)</title><rect x="1168.6" y="533" width="1.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1171.57" y="543.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (7,670,000,000 samples, 0.07%)</title><rect x="73.9" y="293" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="76.86" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (3,670,000,000 samples, 0.03%)</title><rect x="933.3" y="293" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="936.33" y="303.5" ></text>
</g>
<g >
<title>kl::server::GrammarContext::buildQuery (4,350,000,000 samples, 0.04%)</title><rect x="1162.3" y="517" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1165.33" y="527.5" ></text>
</g>
<g >
<title>atime_needs_update (5,480,000,000 samples, 0.05%)</title><rect x="991.4" y="149" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="994.35" y="159.5" ></text>
</g>
<g >
<title>[unknown] (1,300,000,000 samples, 0.01%)</title><rect x="10.1" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.09" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::LongCounter&lt;unsigned long&gt;::Add (1,220,000,000 samples, 0.01%)</title><rect x="27.2" y="517" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="30.15" y="527.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (3,200,000,000 samples, 0.03%)</title><rect x="312.8" y="437" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="315.82" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (1,350,000,000 samples, 0.01%)</title><rect x="1164.1" y="357" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1167.15" y="367.5" ></text>
</g>
<g >
<title>__secure_computing (2,560,000,000 samples, 0.02%)</title><rect x="616.9" y="261" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="619.88" y="271.5" ></text>
</g>
<g >
<title>rocksdb::DBImplReadOnly::Get (3,390,000,000 samples, 0.03%)</title><rect x="1160.8" y="469" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1163.76" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (476,330,000,000 samples, 4.25%)</title><rect x="942.9" y="261" width="50.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="945.88" y="271.5" >__x64..</text>
</g>
<g >
<title>__x64_sys_write (14,210,000,000 samples, 0.13%)</title><rect x="1168.6" y="549" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.56" y="559.5" ></text>
</g>
<g >
<title>[[vdso]] (2,580,000,000 samples, 0.02%)</title><rect x="28.9" y="517" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="31.86" y="527.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (1,870,000,000 samples, 0.02%)</title><rect x="1042.9" y="357" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1045.88" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1,830,000,000 samples, 0.02%)</title><rect x="257.9" y="373" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="260.94" y="383.5" ></text>
</g>
<g >
<title>aisearch::SUSearchServiceAsyncProcessor::return_ShardSearch&lt;apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter&gt; (4,100,000,000 samples, 0.04%)</title><rect x="28.4" y="517" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="31.36" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1192.78" y="255.5" ></text>
</g>
<g >
<title>GlassPostList::jump_to (120,620,000,000 samples, 1.08%)</title><rect x="1083.3" y="405" width="12.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1086.34" y="415.5" ></text>
</g>
<g >
<title>__fget_light (4,270,000,000 samples, 0.04%)</title><rect x="1014.7" y="245" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1017.68" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;opentelemetry::v1::sdk::common::AttributeConverter&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (1,040,000,000 samples, 0.01%)</title><rect x="1163.4" y="325" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1166.43" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::DefaultAggregation::CreateAggregation (1,690,000,000 samples, 0.02%)</title><rect x="1164.8" y="357" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1167.83" y="367.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (980,000,000 samples, 0.01%)</title><rect x="991.8" y="117" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="994.78" y="127.5" ></text>
</g>
<g >
<title>__fdget (3,960,000,000 samples, 0.04%)</title><rect x="631.1" y="293" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="634.06" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (8,660,000,000 samples, 0.08%)</title><rect x="1188.0" y="597" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1191.05" y="607.5" ></text>
</g>
<g >
<title>filemap_get_pages (1,770,000,000 samples, 0.02%)</title><rect x="705.9" y="213" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="708.93" y="223.5" ></text>
</g>
<g >
<title>GlassTable::read_block (7,400,000,000 samples, 0.07%)</title><rect x="705.4" y="373" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="708.40" y="383.5" ></text>
</g>
<g >
<title>Xapian::Internal::MSetItem::operator= (32,160,000,000 samples, 0.29%)</title><rect x="1136.4" y="437" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1139.40" y="447.5" ></text>
</g>
<g >
<title>vfs_read (7,380,000,000 samples, 0.07%)</title><rect x="1095.0" y="261" width="0.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1097.99" y="271.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (1,750,000,000 samples, 0.02%)</title><rect x="28.0" y="533" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.04" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,130,000,000 samples, 0.01%)</title><rect x="314.9" y="341" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="317.94" y="351.5" ></text>
</g>
<g >
<title>MultiAndPostList::get_weight (3,443,590,000,000 samples, 30.76%)</title><rect x="708.3" y="469" width="363.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="711.30" y="479.5" >MultiAndPostList::get_weight</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7,430,000,000 samples, 0.07%)</title><rect x="1070.5" y="453" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1073.47" y="463.5" ></text>
</g>
<g >
<title>GlassPostList::get_doclength (8,260,000,000 samples, 0.07%)</title><rect x="710.1" y="453" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="713.12" y="463.5" ></text>
</g>
<g >
<title>new_sync_read (1,360,000,000 samples, 0.01%)</title><rect x="261.6" y="149" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="264.64" y="159.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (7,740,000,000 samples, 0.07%)</title><rect x="241.4" y="245" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="244.36" y="255.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::Get (2,190,000,000 samples, 0.02%)</title><rect x="1160.9" y="453" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1163.87" y="463.5" ></text>
</g>
<g >
<title>GlassTable::find_in_leaf (950,000,000 samples, 0.01%)</title><rect x="1054.9" y="325" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1057.90" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::LongHistogramAggregation::LongHistogramAggregation (1,620,000,000 samples, 0.01%)</title><rect x="1164.8" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1167.83" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (970,000,000 samples, 0.01%)</title><rect x="1189.8" y="117" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.80" y="127.5" ></text>
</g>
<g >
<title>filemap_read (1,310,000,000 samples, 0.01%)</title><rect x="313.0" y="245" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="315.96" y="255.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (4,140,000,000 samples, 0.04%)</title><rect x="650.6" y="293" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="653.58" y="303.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (125,300,000,000 samples, 1.12%)</title><rect x="1017.7" y="181" width="13.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1020.70" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (13,720,000,000 samples, 0.12%)</title><rect x="626.9" y="325" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="629.88" y="335.5" ></text>
</g>
<g >
<title>OrPostList::at_end (13,340,000,000 samples, 0.12%)</title><rect x="1076.1" y="469" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1079.06" y="479.5" ></text>
</g>
<g >
<title>__seccomp_filter (2,470,000,000 samples, 0.02%)</title><rect x="234.7" y="229" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="237.65" y="239.5" ></text>
</g>
<g >
<title>ThriftIO19 (1,410,000,000 samples, 0.01%)</title><rect x="15.7" y="613" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.67" y="623.5" ></text>
</g>
<g >
<title>ThriftIO27 (1,420,000,000 samples, 0.01%)</title><rect x="16.8" y="613" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="19.83" y="623.5" ></text>
</g>
<g >
<title>msetcmp_by_relevance&lt;true&gt; (29,170,000,000 samples, 0.26%)</title><rect x="1119.0" y="453" width="3.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1122.04" y="463.5" ></text>
</g>
<g >
<title>new_sync_read (980,000,000 samples, 0.01%)</title><rect x="314.9" y="277" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="317.95" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1,980,000,000 samples, 0.02%)</title><rect x="658.6" y="405" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="661.58" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (1,480,000,000 samples, 0.01%)</title><rect x="261.6" y="181" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="264.64" y="191.5" ></text>
</g>
<g >
<title>generic_file_read_iter (7,400,000,000 samples, 0.07%)</title><rect x="659.1" y="245" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="662.12" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1,040,000,000 samples, 0.01%)</title><rect x="11.8" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.84" y="607.5" ></text>
</g>
<g >
<title>GlassDatabase::get_doclength (3,111,920,000,000 samples, 27.80%)</title><rect x="714.2" y="437" width="328.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="717.16" y="447.5" >GlassDatabase::get_doclength</text>
</g>
<g >
<title>do_syscall_64 (21,680,000,000 samples, 0.19%)</title><rect x="1008.9" y="293" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1011.94" y="303.5" ></text>
</g>
<g >
<title>MultiAndPostList::get_weight (6,090,000,000 samples, 0.05%)</title><rect x="1042.5" y="453" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1045.50" y="463.5" ></text>
</g>
<g >
<title>GlassPostList::GlassPostList (20,740,000,000 samples, 0.19%)</title><rect x="259.7" y="309" width="2.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="262.69" y="319.5" ></text>
</g>
<g >
<title>LocalSubMatch::open_post_list (6,190,000,000 samples, 0.06%)</title><rect x="267.8" y="389" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="270.83" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;opentelemetry::v1::sdk::metrics::AttributesHashMap*, std::default_delete&lt;opentelemetry::v1::sdk::metrics::AttributesHashMap&gt;, std::allocator&lt;void&gt;,  (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.78" y="239.5" ></text>
</g>
<g >
<title>LocalSubMatch::get_postlist (89,090,000,000 samples, 0.80%)</title><rect x="259.1" y="469" width="9.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="262.15" y="479.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3,340,000,000 samples, 0.03%)</title><rect x="1182.5" y="549" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1185.52" y="559.5" ></text>
</g>
<g >
<title>apparmor_file_permission (4,490,000,000 samples, 0.04%)</title><rect x="67.6" y="261" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="70.58" y="271.5" ></text>
</g>
<g >
<title>LeafPostList::get_weight (1,541,080,000,000 samples, 13.77%)</title><rect x="96.7" y="469" width="162.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="99.72" y="479.5" >LeafPostList::get_we..</text>
</g>
<g >
<title>filemap_read (17,430,000,000 samples, 0.16%)</title><rect x="1009.2" y="197" width="1.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1012.16" y="207.5" ></text>
</g>
<g >
<title>pthread_mutex_trylock@@GLIBC_2.34 (1,300,000,000 samples, 0.01%)</title><rect x="1167.6" y="581" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1170.58" y="591.5" ></text>
</g>
<g >
<title>copy_page_to_iter (5,300,000,000 samples, 0.05%)</title><rect x="217.7" y="181" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="220.75" y="191.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (2,950,000,000 samples, 0.03%)</title><rect x="1039.8" y="357" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1042.79" y="367.5" ></text>
</g>
<g >
<title>generic_file_read_iter (7,650,000,000 samples, 0.07%)</title><rect x="241.4" y="229" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="244.37" y="239.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (17,580,000,000 samples, 0.16%)</title><rect x="1052.9" y="197" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1055.87" y="207.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3,660,000,000 samples, 0.03%)</title><rect x="245.4" y="197" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="248.40" y="207.5" ></text>
</g>
<g >
<title>__fdget (2,510,000,000 samples, 0.02%)</title><rect x="244.1" y="277" width="0.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="247.15" y="287.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (9,590,000,000 samples, 0.09%)</title><rect x="233.9" y="277" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="236.94" y="287.5" ></text>
</g>
<g >
<title>GlassTable::find (17,630,000,000 samples, 0.16%)</title><rect x="259.7" y="261" width="1.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="262.73" y="271.5" ></text>
</g>
<g >
<title>GlassPostList::jump_to (1,502,520,000,000 samples, 13.42%)</title><rect x="100.4" y="421" width="158.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="103.38" y="431.5" >GlassPostList::jump_to</text>
</g>
<g >
<title>GlassTable::form_key (2,390,000,000 samples, 0.02%)</title><rect x="240.9" y="373" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="243.95" y="383.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (950,000,000 samples, 0.01%)</title><rect x="10.1" y="533" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="13.12" y="543.5" ></text>
</g>
<g >
<title>__libc_pread (199,730,000,000 samples, 1.78%)</title><rect x="630.0" y="357" width="21.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="633.00" y="367.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3,250,000,000 samples, 0.03%)</title><rect x="1182.5" y="533" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1185.52" y="543.5" ></text>
</g>
<g >
<title>new_sync_read (2,870,000,000 samples, 0.03%)</title><rect x="664.7" y="261" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="667.71" y="271.5" ></text>
</g>
<g >
<title>ThriftIO13 (1,440,000,000 samples, 0.01%)</title><rect x="14.9" y="613" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="17.91" y="623.5" ></text>
</g>
<g >
<title>force_page_cache_ra (1,340,000,000 samples, 0.01%)</title><rect x="80.5" y="357" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="83.46" y="367.5" ></text>
</g>
<g >
<title>GlassPostList::skip_to (1,740,000,000 samples, 0.02%)</title><rect x="315.1" y="437" width="0.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="318.13" y="447.5" ></text>
</g>
<g >
<title>GlassTable::read_block (1,460,000,000 samples, 0.01%)</title><rect x="1042.9" y="309" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1045.89" y="319.5" ></text>
</g>
<g >
<title>copy_page_to_iter (10,150,000,000 samples, 0.09%)</title><rect x="41.1" y="229" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="44.09" y="239.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (8,220,000,000 samples, 0.07%)</title><rect x="260.2" y="69" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="263.22" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (20,110,000,000 samples, 0.18%)</title><rect x="1008.9" y="277" width="2.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1011.94" y="287.5" ></text>
</g>
<g >
<title>msetcmp_by_relevance&lt;true&gt; (29,740,000,000 samples, 0.27%)</title><rect x="1105.5" y="469" width="3.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1108.52" y="479.5" ></text>
</g>
<g >
<title>mark_page_accessed (950,000,000 samples, 0.01%)</title><rect x="1033.7" y="181" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1036.71" y="191.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (121,630,000,000 samples, 1.09%)</title><rect x="243.1" y="373" width="12.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="246.12" y="383.5" ></text>
</g>
<g >
<title>[ai_index] (2,670,000,000 samples, 0.02%)</title><rect x="619.4" y="373" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="622.39" y="383.5" ></text>
</g>
<g >
<title>copy_page_to_iter (980,000,000 samples, 0.01%)</title><rect x="1009.3" y="181" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1012.28" y="191.5" ></text>
</g>
<g >
<title>security_file_permission (3,210,000,000 samples, 0.03%)</title><rect x="233.6" y="229" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="236.59" y="239.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3,790,000,000 samples, 0.03%)</title><rect x="705.5" y="213" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="708.53" y="223.5" ></text>
</g>
<g >
<title>vfs_read (183,400,000,000 samples, 1.64%)</title><rect x="1015.4" y="261" width="19.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1018.40" y="271.5" ></text>
</g>
<g >
<title>seccomp_run_filters (2,860,000,000 samples, 0.03%)</title><rect x="995.3" y="197" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="998.31" y="207.5" ></text>
</g>
<g >
<title>filemap_read (121,440,000,000 samples, 1.08%)</title><rect x="603.3" y="213" width="12.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="606.28" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (183,960,000,000 samples, 1.64%)</title><rect x="215.6" y="309" width="19.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="218.60" y="319.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (17,730,000,000 samples, 0.16%)</title><rect x="259.7" y="277" width="1.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="262.73" y="287.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (384,340,000,000 samples, 3.43%)</title><rect x="34.3" y="437" width="40.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="37.29" y="447.5" >Gla..</text>
</g>
<g >
<title>do_syscall_64 (140,750,000,000 samples, 1.26%)</title><rect x="602.3" y="309" width="14.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="605.34" y="319.5" ></text>
</g>
<g >
<title>kl::meta::MetaManager::read_total_docs (4,680,000,000 samples, 0.04%)</title><rect x="1160.7" y="517" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1163.69" y="527.5" ></text>
</g>
<g >
<title>OrPostList::get_docid (32,240,000,000 samples, 0.29%)</title><rect x="1078.6" y="469" width="3.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1081.56" y="479.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool  (1,230,000,000 samples, 0.01%)</title><rect x="1111.8" y="453" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1114.79" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (203,850,000,000 samples, 1.82%)</title><rect x="1014.5" y="309" width="21.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1017.46" y="319.5" >e..</text>
</g>
<g >
<title>GlassCursor::find_entry (5,520,000,000 samples, 0.05%)</title><rect x="664.1" y="389" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="667.08" y="399.5" ></text>
</g>
<g >
<title>vfs_read (2,930,000,000 samples, 0.03%)</title><rect x="664.7" y="277" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="667.71" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_write (3,150,000,000 samples, 0.03%)</title><rect x="1166.8" y="501" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1169.76" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::SyncMultiMetricStorage::RecordLong (12,040,000,000 samples, 0.11%)</title><rect x="1163.3" y="501" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1166.28" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt; &gt; &gt; &gt;::~unordered_map (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="181" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1192.78" y="191.5" ></text>
</g>
<g >
<title>IOThreadPool12 (1,430,000,000 samples, 0.01%)</title><rect x="11.4" y="613" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="14.37" y="623.5" ></text>
</g>
<g >
<title>GlassTable::read_block (21,210,000,000 samples, 0.19%)</title><rect x="1052.7" y="309" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1055.66" y="319.5" ></text>
</g>
<g >
<title>new_sync_read (2,920,000,000 samples, 0.03%)</title><rect x="664.2" y="245" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="667.16" y="255.5" ></text>
</g>
<g >
<title>new_sync_read (270,310,000,000 samples, 2.41%)</title><rect x="38.9" y="293" width="28.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="41.91" y="303.5" >ne..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19,640,000,000 samples, 0.18%)</title><rect x="80.9" y="341" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="83.88" y="351.5" ></text>
</g>
<g >
<title>posix_fadvise (1,970,000,000 samples, 0.02%)</title><rect x="80.4" y="453" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="83.41" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,310,000,000 samples, 0.01%)</title><rect x="1158.6" y="453" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1161.59" y="463.5" ></text>
</g>
<g >
<title>vfs_read (1,010,000,000 samples, 0.01%)</title><rect x="314.9" y="293" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="317.95" y="303.5" ></text>
</g>
<g >
<title>rocksdb::TableCache::Get (37,430,000,000 samples, 0.33%)</title><rect x="263.5" y="213" width="4.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="266.54" y="223.5" ></text>
</g>
<g >
<title>__memchr_evex (3,960,000,000 samples, 0.04%)</title><rect x="24.6" y="581" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="27.61" y="591.5" ></text>
</g>
<g >
<title>vfs_read (173,350,000,000 samples, 1.55%)</title><rect x="631.7" y="293" width="18.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="634.73" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (4,630,000,000 samples, 0.04%)</title><rect x="703.6" y="309" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="706.57" y="319.5" ></text>
</g>
<g >
<title>generic_file_read_iter (264,890,000,000 samples, 2.37%)</title><rect x="39.5" y="261" width="27.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="42.46" y="271.5" >g..</text>
</g>
<g >
<title>IOThreadPool18 (1,470,000,000 samples, 0.01%)</title><rect x="12.3" y="613" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="15.29" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (4,780,000,000 samples, 0.04%)</title><rect x="1189.4" y="373" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.40" y="383.5" ></text>
</g>
<g >
<title>folly::EventBaseAtomicNotificationQueue&lt;folly::Function&lt;void  (1,480,000,000 samples, 0.01%)</title><rect x="1166.6" y="581" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1169.59" y="591.5" ></text>
</g>
<g >
<title>OrPostList::check (46,520,000,000 samples, 0.42%)</title><rect x="660.4" y="437" width="4.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="663.35" y="447.5" ></text>
</g>
<g >
<title>filemap_get_pages (3,240,000,000 samples, 0.03%)</title><rect x="1054.3" y="149" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1057.34" y="159.5" ></text>
</g>
<g >
<title>GlassPostList::next_chunk (9,700,000,000 samples, 0.09%)</title><rect x="705.3" y="421" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="708.32" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,380,000,000 samples, 0.01%)</title><rect x="1166.6" y="517" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1169.60" y="527.5" ></text>
</g>
<g >
<title>GlassTable::find (677,300,000,000 samples, 6.05%)</title><rect x="936.7" y="357" width="71.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="939.74" y="367.5" >GlassTab..</text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool  (2,400,000,000 samples, 0.02%)</title><rect x="1158.2" y="485" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1161.18" y="495.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (2,020,000,000 samples, 0.02%)</title><rect x="1055.1" y="325" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1058.12" y="335.5" ></text>
</g>
<g >
<title>vfs_read (4,420,000,000 samples, 0.04%)</title><rect x="703.6" y="293" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="706.59" y="303.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,430,000,000 samples, 0.01%)</title><rect x="1011.1" y="277" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1014.07" y="287.5" ></text>
</g>
<g >
<title>Glass::compare&lt;Glass::LeafItem, Glass::LeafItem&gt; (6,580,000,000 samples, 0.06%)</title><rect x="997.1" y="325" width="0.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1000.11" y="335.5" ></text>
</g>
<g >
<title>walk_component (1,040,000,000 samples, 0.01%)</title><rect x="23.9" y="453" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="26.87" y="463.5" ></text>
</g>
<g >
<title>aisearch::SUSearchServiceAsyncProcessor::return_Search&lt;apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter&gt; (3,090,000,000 samples, 0.03%)</title><rect x="1182.5" y="469" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1185.54" y="479.5" ></text>
</g>
<g >
<title>[unknown] (950,000,000 samples, 0.01%)</title><rect x="10.1" y="565" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.12" y="575.5" ></text>
</g>
<g >
<title>Xapian::Document::get_value[abi:cxx11] (465,940,000,000 samples, 4.16%)</title><rect x="29.8" y="517" width="49.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="32.76" y="527.5" >Xapi..</text>
</g>
<g >
<title>Xapian::Document::Internal::get_value[abi:cxx11] (464,550,000,000 samples, 4.15%)</title><rect x="29.9" y="501" width="49.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="32.91" y="511.5" >Xapi..</text>
</g>
<g >
<title>copy_page_to_iter (3,660,000,000 samples, 0.03%)</title><rect x="603.8" y="197" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="606.83" y="207.5" ></text>
</g>
<g >
<title>rocksdb::DBImplReadOnly::Get (4,610,000,000 samples, 0.04%)</title><rect x="268.0" y="293" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="270.98" y="303.5" ></text>
</g>
<g >
<title>filemap_get_pages (2,540,000,000 samples, 0.02%)</title><rect x="1093.8" y="165" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1096.82" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (141,020,000,000 samples, 1.26%)</title><rect x="602.3" y="325" width="14.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="605.32" y="335.5" ></text>
</g>
<g >
<title>rw_verify_area (2,550,000,000 samples, 0.02%)</title><rect x="616.1" y="261" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="619.11" y="271.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (17,880,000,000 samples, 0.16%)</title><rect x="1009.1" y="229" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1012.12" y="239.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (547,390,000,000 samples, 4.89%)</title><rect x="938.3" y="341" width="57.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="941.31" y="351.5" >GlassT..</text>
</g>
<g >
<title>__libc_pread (5,080,000,000 samples, 0.05%)</title><rect x="703.5" y="357" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="706.54" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,290,000,000 samples, 0.01%)</title><rect x="1166.6" y="501" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1169.60" y="511.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (283,080,000,000 samples, 2.53%)</title><rect x="212.7" y="389" width="29.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="215.69" y="399.5" >Gl..</text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (3,380,000,000 samples, 0.03%)</title><rect x="1189.4" y="229" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.40" y="239.5" ></text>
</g>
<g >
<title>operator new (990,000,000 samples, 0.01%)</title><rect x="1184.3" y="597" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1187.32" y="607.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryBranch::get_description_helper[abi:cxx11] (2,230,000,000 samples, 0.02%)</title><rect x="1159.7" y="437" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1162.70" y="447.5" ></text>
</g>
<g >
<title>filemap_read (7,570,000,000 samples, 0.07%)</title><rect x="241.4" y="213" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="244.38" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (313,870,000,000 samples, 2.80%)</title><rect x="37.2" y="357" width="33.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="40.20" y="367.5" >en..</text>
</g>
<g >
<title>GlassCursor::find_entry (1,250,000,000 samples, 0.01%)</title><rect x="259.5" y="277" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="262.46" y="287.5" ></text>
</g>
<g >
<title>GlassPostList::next_chunk (1,190,000,000 samples, 0.01%)</title><rect x="1097.9" y="437" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1100.91" y="447.5" ></text>
</g>
<g >
<title>[ai_index] (1,900,000,000 samples, 0.02%)</title><rect x="236.4" y="357" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="239.45" y="367.5" ></text>
</g>
<g >
<title>Xapian::Query::get_unique_terms_begin (1,950,000,000 samples, 0.02%)</title><rect x="80.2" y="453" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="83.16" y="463.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::GetFromTable (2,040,000,000 samples, 0.02%)</title><rect x="1160.9" y="437" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1163.89" y="447.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (24,850,000,000 samples, 0.22%)</title><rect x="1031.1" y="165" width="2.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1034.06" y="175.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (2,510,000,000 samples, 0.02%)</title><rect x="1010.6" y="165" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1013.64" y="175.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (9,630,000,000 samples, 0.09%)</title><rect x="650.0" y="309" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="653.00" y="319.5" ></text>
</g>
<g >
<title>__libc_pread (3,380,000,000 samples, 0.03%)</title><rect x="664.7" y="341" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="667.67" y="351.5" ></text>
</g>
<g >
<title>GlassPostList::next (3,580,000,000 samples, 0.03%)</title><rect x="1072.8" y="453" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1075.79" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::visit&lt;opentelemetry::v1::sdk::common::AttributeConverter&amp;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt;&amp;&gt; (1,640,000,000 samples, 0.01%)</title><rect x="1163.4" y="389" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1166.37" y="399.5" ></text>
</g>
<g >
<title>GlassTable::find_in_branch (1,370,000,000 samples, 0.01%)</title><rect x="1008.1" y="357" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1011.13" y="367.5" ></text>
</g>
<g >
<title>GlassPostList::next_in_chunk (1,020,000,000 samples, 0.01%)</title><rect x="1099.0" y="453" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1101.95" y="463.5" ></text>
</g>
<g >
<title>GlassTable::read_tag (1,000,000,000 samples, 0.01%)</title><rect x="78.0" y="421" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="81.02" y="431.5" ></text>
</g>
<g >
<title>generic_file_read_iter (5,860,000,000 samples, 0.05%)</title><rect x="704.3" y="245" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="707.25" y="255.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::AttributesHashMap::GetOrSetDefault (4,620,000,000 samples, 0.04%)</title><rect x="1164.7" y="469" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1167.72" y="479.5" ></text>
</g>
<g >
<title>eventfd_write (1,180,000,000 samples, 0.01%)</title><rect x="1166.6" y="453" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1169.61" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,450,000,000 samples, 0.01%)</title><rect x="1189.1" y="581" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.05" y="591.5" ></text>
</g>
<g >
<title>generic_file_read_iter (158,200,000,000 samples, 1.41%)</title><rect x="216.9" y="213" width="16.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="219.86" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1,020,000,000 samples, 0.01%)</title><rect x="12.4" y="597" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.44" y="607.5" ></text>
</g>
<g >
<title>pipe_write (12,870,000,000 samples, 0.11%)</title><rect x="1168.7" y="485" width="1.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1171.68" y="495.5" ></text>
</g>
<g >
<title>__libc_pread (7,600,000,000 samples, 0.07%)</title><rect x="1055.5" y="309" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1058.52" y="319.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (1,060,000,000 samples, 0.01%)</title><rect x="628.4" y="389" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="631.39" y="399.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryOr::postlist (81,570,000,000 samples, 0.73%)</title><rect x="259.2" y="405" width="8.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="262.21" y="415.5" ></text>
</g>
<g >
<title>generic_file_read_iter (970,000,000 samples, 0.01%)</title><rect x="314.9" y="245" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="317.95" y="255.5" ></text>
</g>
<g >
<title>security_file_permission (4,260,000,000 samples, 0.04%)</title><rect x="1034.3" y="229" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1037.26" y="239.5" ></text>
</g>
<g >
<title>OrPostList::skip_to (5,410,000,000 samples, 0.05%)</title><rect x="1099.1" y="469" width="0.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1102.07" y="479.5" ></text>
</g>
<g >
<title>GlassTable::find_in_leaf (13,060,000,000 samples, 0.12%)</title><rect x="235.1" y="357" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="238.07" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1,250,000,000 samples, 0.01%)</title><rect x="658.5" y="405" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="661.45" y="415.5" ></text>
</g>
<g >
<title>__libc_pread (1,450,000,000 samples, 0.01%)</title><rect x="1042.9" y="293" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1045.89" y="303.5" ></text>
</g>
<g >
<title>OrPostList::~OrPostList (1,030,000,000 samples, 0.01%)</title><rect x="706.5" y="453" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="709.49" y="463.5" ></text>
</g>
<g >
<title>filemap_read (94,130,000,000 samples, 0.84%)</title><rect x="245.0" y="213" width="9.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="247.96" y="223.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryOr::postlist (6,340,000,000 samples, 0.06%)</title><rect x="267.8" y="453" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="270.82" y="463.5" ></text>
</g>
<g >
<title>GlassTable::find_in_leaf (2,180,000,000 samples, 0.02%)</title><rect x="702.9" y="373" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="705.91" y="383.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;aisearch::SUDocItem*, std::vector&lt;aisearch::SUDocItem, std::allocator&lt;aisearch::SUDocItem&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;kl::server::Handler::future_Search (1,060,000,000 samples, 0.01%)</title><rect x="10.6" y="485" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="13.63" y="495.5" ></text>
</g>
<g >
<title>aisearch::SUDocItem::SUDocItem (1,450,000,000 samples, 0.01%)</title><rect x="1160.5" y="517" width="0.1" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="1163.45" y="527.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (6,210,000,000 samples, 0.06%)</title><rect x="1055.6" y="213" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1058.60" y="223.5" ></text>
</g>
<g >
<title>rocksdb::DBImplReadOnly::Get (47,950,000,000 samples, 0.43%)</title><rect x="262.4" y="245" width="5.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="265.43" y="255.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (21,410,000,000 samples, 0.19%)</title><rect x="619.7" y="373" width="2.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="622.67" y="383.5" ></text>
</g>
<g >
<title>ThriftIO24 (1,360,000,000 samples, 0.01%)</title><rect x="16.4" y="613" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="19.39" y="623.5" ></text>
</g>
<g >
<title>Xapian::Document::~Document (1,150,000,000 samples, 0.01%)</title><rect x="78.9" y="517" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="81.87" y="527.5" ></text>
</g>
<g >
<title>filemap_get_pages (26,520,000,000 samples, 0.24%)</title><rect x="1030.9" y="181" width="2.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1033.90" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_fadvise64 (1,600,000,000 samples, 0.01%)</title><rect x="80.4" y="405" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="83.43" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::LongHistogramAggregation::Merge (1,520,000,000 samples, 0.01%)</title><rect x="1189.5" y="197" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1192.54" y="207.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (339,230,000,000 samples, 3.03%)</title><rect x="34.7" y="405" width="35.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="37.67" y="415.5" >Gla..</text>
</g>
<g >
<title>GlassPostList::next_chunk (11,620,000,000 samples, 0.10%)</title><rect x="658.9" y="421" width="1.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="661.94" y="431.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (1,370,000,000 samples, 0.01%)</title><rect x="24.4" y="405" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="27.43" y="415.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (25,550,000,000 samples, 0.23%)</title><rect x="1092.2" y="373" width="2.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1095.15" y="383.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1,850,000,000 samples, 0.02%)</title><rect x="24.4" y="485" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="27.40" y="495.5" ></text>
</g>
<g >
<title>Xapian::Internal::MSetItem::operator= (16,050,000,000 samples, 0.14%)</title><rect x="1099.7" y="469" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1102.67" y="479.5" ></text>
</g>
<g >
<title>ThriftIO4 (1,380,000,000 samples, 0.01%)</title><rect x="18.0" y="613" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="20.95" y="623.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (6,180,000,000 samples, 0.06%)</title><rect x="705.5" y="261" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="708.48" y="271.5" ></text>
</g>
<g >
<title>OrPostList::~OrPostList (1,410,000,000 samples, 0.01%)</title><rect x="1075.4" y="437" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1078.43" y="447.5" ></text>
</g>
<g >
<title>__libc_pread (14,930,000,000 samples, 0.13%)</title><rect x="259.9" y="213" width="1.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="262.87" y="223.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (1,210,000,000 samples, 0.01%)</title><rect x="70.7" y="389" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="73.70" y="399.5" ></text>
</g>
<g >
<title>Xapian::MiniRankWeight::init (4,890,000,000 samples, 0.04%)</title><rect x="268.0" y="373" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="270.95" y="383.5" ></text>
</g>
<g >
<title>__libc_pread (214,450,000,000 samples, 1.92%)</title><rect x="1013.3" y="325" width="22.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1016.34" y="335.5" >_..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,010,000,000 samples, 0.01%)</title><rect x="261.3" y="165" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="264.33" y="175.5" ></text>
</g>
<g >
<title>rocksdb::DBImplReadOnly::Get (3,930,000,000 samples, 0.04%)</title><rect x="1160.7" y="485" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1163.73" y="495.5" ></text>
</g>
<g >
<title>new_sync_read (96,750,000,000 samples, 0.86%)</title><rect x="244.7" y="261" width="10.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="247.70" y="271.5" ></text>
</g>
<g >
<title>GlassPostList::skip_to (235,280,000,000 samples, 2.10%)</title><rect x="681.6" y="437" width="24.8" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="684.58" y="447.5" >G..</text>
</g>
<g >
<title>GlassTable::read_block (3,470,000,000 samples, 0.03%)</title><rect x="664.7" y="357" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="667.67" y="367.5" ></text>
</g>
<g >
<title>filemap_get_pages (980,000,000 samples, 0.01%)</title><rect x="1056.1" y="165" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1059.13" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,530,000,000 samples, 0.09%)</title><rect x="241.3" y="325" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="244.28" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,110,000,000 samples, 0.18%)</title><rect x="1052.8" y="277" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1055.77" y="287.5" ></text>
</g>
<g >
<title>__seccomp_filter (4,880,000,000 samples, 0.04%)</title><rect x="69.6" y="277" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="72.57" y="287.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1,990,000,000 samples, 0.02%)</title><rect x="664.2" y="181" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="667.19" y="191.5" ></text>
</g>
<g >
<title>__libc_pread (525,390,000,000 samples, 4.69%)</title><rect x="940.5" y="309" width="55.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="943.46" y="319.5" >__lib..</text>
</g>
<g >
<title>ThriftIO3 (1,380,000,000 samples, 0.01%)</title><rect x="17.7" y="613" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="20.71" y="623.5" ></text>
</g>
<g >
<title>pack_glass_postlist_key (14,340,000,000 samples, 0.13%)</title><rect x="656.2" y="405" width="1.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="659.24" y="415.5" ></text>
</g>
<g >
<title>GlassTable::read_block (23,390,000,000 samples, 0.21%)</title><rect x="1008.8" y="341" width="2.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1011.78" y="351.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool  (2,220,000,000 samples, 0.02%)</title><rect x="1111.9" y="469" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1114.93" y="479.5" ></text>
</g>
<g >
<title>OrPostList::get_docid (1,950,000,000 samples, 0.02%)</title><rect x="1154.7" y="485" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1157.68" y="495.5" ></text>
</g>
<g >
<title>check_tname_in_key_lite (4,580,000,000 samples, 0.04%)</title><rect x="1037.8" y="373" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1040.85" y="383.5" ></text>
</g>
<g >
<title>__libc_pread (1,500,000,000 samples, 0.01%)</title><rect x="313.0" y="373" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="315.95" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1,030,000,000 samples, 0.01%)</title><rect x="14.0" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.96" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (7,840,000,000 samples, 0.07%)</title><rect x="1161.3" y="501" width="0.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1164.35" y="511.5" ></text>
</g>
<g >
<title>GlassPostList::get_docid (980,000,000 samples, 0.01%)</title><rect x="1072.7" y="453" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1075.68" y="463.5" ></text>
</g>
<g >
<title>GlassTable::find (1,760,000,000 samples, 0.02%)</title><rect x="1042.9" y="341" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1045.88" y="351.5" ></text>
</g>
<g >
<title>irqentry_exit (3,670,000,000 samples, 0.03%)</title><rect x="933.3" y="341" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="936.33" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek (5,640,000,000 samples, 0.05%)</title><rect x="265.6" y="165" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="268.62" y="175.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (2,070,000,000 samples, 0.02%)</title><rect x="266.0" y="149" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="269.00" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (190,960,000,000 samples, 1.71%)</title><rect x="630.9" y="325" width="20.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="633.91" y="335.5" ></text>
</g>
<g >
<title>seccomp_run_filters (1,270,000,000 samples, 0.01%)</title><rect x="1035.7" y="213" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1038.71" y="223.5" ></text>
</g>
<g >
<title>GlassTable::read_tag (8,410,000,000 samples, 0.08%)</title><rect x="1036.0" y="357" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1039.04" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (3,190,000,000 samples, 0.03%)</title><rect x="664.1" y="277" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="667.14" y="287.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::KeyValueIterableView&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::ForEachKeyValue (3,490,000,000 samples, 0.03%)</title><rect x="1163.3" y="453" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1166.34" y="463.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (1,350,000,000 samples, 0.01%)</title><rect x="1011.3" y="357" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1014.32" y="367.5" ></text>
</g>
<g >
<title>GlassDatabase::readahead_for_query (5,270,000,000 samples, 0.05%)</title><rect x="80.1" y="469" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="83.08" y="479.5" ></text>
</g>
<g >
<title>GlassPostList::jump_to (111,170,000,000 samples, 0.99%)</title><rect x="1044.8" y="389" width="11.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1047.81" y="399.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (3,090,000,000 samples, 0.03%)</title><rect x="616.8" y="277" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.82" y="287.5" ></text>
</g>
<g >
<title>ThriftIO23 (1,440,000,000 samples, 0.01%)</title><rect x="16.2" y="613" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="19.23" y="623.5" ></text>
</g>
<g >
<title>Glass::compare&lt;Glass::LeafItem, Glass::LeafItem&gt; (3,090,000,000 samples, 0.03%)</title><rect x="235.6" y="341" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="238.62" y="351.5" ></text>
</g>
<g >
<title>new_sync_read (6,300,000,000 samples, 0.06%)</title><rect x="1055.6" y="229" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1058.59" y="239.5" ></text>
</g>
<g >
<title>MultiAndPostList::get_weight (1,680,000,000 samples, 0.02%)</title><rect x="79.7" y="485" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.69" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (18,850,000,000 samples, 0.17%)</title><rect x="80.9" y="309" width="2.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="83.89" y="319.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::metrics::PrometheusCollector::Collect (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="453" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1192.40" y="463.5" ></text>
</g>
<g >
<title>GlassTable::form_key (4,090,000,000 samples, 0.04%)</title><rect x="1008.3" y="357" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1011.31" y="367.5" ></text>
</g>
<g >
<title>all (11,195,450,000,000 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (174,110,000,000 samples, 1.56%)</title><rect x="1015.8" y="229" width="18.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1018.84" y="239.5" ></text>
</g>
<g >
<title>Xapian::Enquire::~Enquire (970,000,000 samples, 0.01%)</title><rect x="1158.8" y="517" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1161.84" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::Get (33,840,000,000 samples, 0.30%)</title><rect x="263.7" y="197" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="266.73" y="207.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::TemporalMetricStorage::buildMetrics (3,670,000,000 samples, 0.03%)</title><rect x="1189.4" y="293" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.40" y="303.5" ></text>
</g>
<g >
<title>MultiAndPostList::get_docid (1,090,000,000 samples, 0.01%)</title><rect x="79.5" y="485" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="82.52" y="495.5" ></text>
</g>
<g >
<title>apache::thrift::ServiceHandler&lt;aisearch::SUSearchService&gt;::async_tm_Search (4,350,000,000 samples, 0.04%)</title><rect x="26.9" y="549" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="29.86" y="559.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5,670,000,000 samples, 0.05%)</title><rect x="73.9" y="245" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="76.91" y="255.5" ></text>
</g>
<g >
<title>vfs_read (8,090,000,000 samples, 0.07%)</title><rect x="73.8" y="325" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="76.84" y="335.5" ></text>
</g>
<g >
<title>IOThreadPool8 (1,480,000,000 samples, 0.01%)</title><rect x="14.3" y="613" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="17.27" y="623.5" ></text>
</g>
<g >
<title>OrPostList::get_weight (139,970,000,000 samples, 1.25%)</title><rect x="1043.1" y="453" width="14.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1046.14" y="463.5" ></text>
</g>
<g >
<title>Xapian::Query::Internal::postlist_sub_and_like (6,250,000,000 samples, 0.06%)</title><rect x="267.8" y="421" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="270.83" y="431.5" ></text>
</g>
<g >
<title>apache::thrift::concurrency::ThreadManager::Impl::Worker::run (10,812,850,000,000 samples, 96.58%)</title><rect x="26.8" y="581" width="1139.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="29.78" y="591.5" >apache::thrift::concurrency::ThreadManager::Impl::Worker::run</text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;opentelemetry::v1::sdk::trace::Span*,  (5,040,000,000 samples, 0.05%)</title><rect x="1165.4" y="469" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1168.43" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::KeyValueIterableView&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::ForEachKeyValue (2,160,000,000 samples, 0.02%)</title><rect x="1163.7" y="437" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1166.73" y="447.5" ></text>
</g>
<g >
<title>LeafPostList::get_weight (5,930,000,000 samples, 0.05%)</title><rect x="1042.5" y="437" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1045.50" y="447.5" ></text>
</g>
<g >
<title>IOThreadPool1 (1,530,000,000 samples, 0.01%)</title><rect x="12.6" y="613" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="15.60" y="623.5" ></text>
</g>
<g >
<title>filemap_read (6,920,000,000 samples, 0.06%)</title><rect x="1095.0" y="197" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1098.02" y="207.5" ></text>
</g>
<g >
<title>GlassTable::prev_for_sequential (23,820,000,000 samples, 0.21%)</title><rect x="1008.7" y="357" width="2.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1011.74" y="367.5" ></text>
</g>
<g >
<title>new_sync_read (1,260,000,000 samples, 0.01%)</title><rect x="1042.9" y="213" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1045.90" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;opentelemetry::v1::sdk::metrics::AttributesHashMap&gt;::operator (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1192.78" y="223.5" ></text>
</g>
<g >
<title>GlassTable::find (258,070,000,000 samples, 2.31%)</title><rect x="599.1" y="389" width="27.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="602.08" y="399.5" >G..</text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (2,327,830,000,000 samples, 20.79%)</title><rect x="351.6" y="421" width="245.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="354.63" y="431.5" >GlassPostList::move_forward_in_c..</text>
</g>
<g >
<title>GlassTable::find (26,500,000,000 samples, 0.24%)</title><rect x="1052.5" y="341" width="2.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1055.54" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt; &gt;::pair&lt;opentelemetry::v1::sdk::common::OrderedAttributeMap&amp;, std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt;, true&gt; (1,470,000,000 samples, 0.01%)</title><rect x="1164.1" y="453" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1167.14" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (5,540,000,000 samples, 0.05%)</title><rect x="1165.4" y="517" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1168.38" y="527.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (1,660,000,000 samples, 0.01%)</title><rect x="24.4" y="437" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="27.40" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (1,140,000,000 samples, 0.01%)</title><rect x="1041.3" y="373" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1044.30" y="383.5" ></text>
</g>
<g >
<title>filemap_read (7,540,000,000 samples, 0.07%)</title><rect x="73.9" y="261" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="76.87" y="271.5" ></text>
</g>
<g >
<title>start_thread (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="597" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.40" y="607.5" ></text>
</g>
<g >
<title>pack_glass_postlist_key (20,440,000,000 samples, 0.18%)</title><rect x="1038.3" y="373" width="2.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1041.33" y="383.5" ></text>
</g>
<g >
<title>check_tname_in_key_lite (1,590,000,000 samples, 0.01%)</title><rect x="705.0" y="405" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="708.02" y="415.5" ></text>
</g>
<g >
<title>new_sync_read (4,230,000,000 samples, 0.04%)</title><rect x="703.6" y="277" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="706.60" y="287.5" ></text>
</g>
<g >
<title>Xapian::MSet::Internal::get_doc_by_index (4,150,000,000 samples, 0.04%)</title><rect x="1159.1" y="501" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1162.15" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,090,000,000 samples, 0.18%)</title><rect x="1052.8" y="261" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1055.77" y="271.5" ></text>
</g>
<g >
<title>alloc_empty_file (990,000,000 samples, 0.01%)</title><rect x="23.5" y="469" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="26.48" y="479.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (95,420,000,000 samples, 0.85%)</title><rect x="244.8" y="245" width="10.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="247.83" y="255.5" ></text>
</g>
<g >
<title>filemap_read (1,360,000,000 samples, 0.01%)</title><rect x="261.6" y="101" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="264.64" y="111.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (6,590,000,000 samples, 0.06%)</title><rect x="25.4" y="565" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.39" y="575.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1,320,000,000 samples, 0.01%)</title><rect x="313.0" y="261" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="315.96" y="271.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::MakeRecordable (1,900,000,000 samples, 0.02%)</title><rect x="1161.7" y="469" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1164.67" y="479.5" ></text>
</g>
<g >
<title>[unknown] (950,000,000 samples, 0.01%)</title><rect x="10.1" y="549" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.12" y="559.5" ></text>
</g>
<g >
<title>IOThreadPool23 (1,430,000,000 samples, 0.01%)</title><rect x="13.2" y="613" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="16.20" y="623.5" ></text>
</g>
<g >
<title>common_interrupt (960,000,000 samples, 0.01%)</title><rect x="933.2" y="357" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="936.21" y="367.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryTerm::get_description[abi:cxx11] (1,300,000,000 samples, 0.01%)</title><rect x="1159.8" y="421" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1162.79" y="431.5" ></text>
</g>
<g >
<title>MultiAndPostList::find_next_match (18,260,000,000 samples, 0.16%)</title><rect x="313.2" y="453" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="316.19" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (1,030,000,000 samples, 0.01%)</title><rect x="1164.2" y="341" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1167.15" y="351.5" ></text>
</g>
<g >
<title>apache::thrift::Client&lt;aisearch::SUSearchService&gt;::future_ShardSearch (1,910,000,000 samples, 0.02%)</title><rect x="26.9" y="517" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="29.93" y="527.5" ></text>
</g>
<g >
<title>GlassCursor::get_key (3,030,000,000 samples, 0.03%)</title><rect x="1011.7" y="373" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1014.67" y="383.5" ></text>
</g>
<g >
<title>GlassTable::read_tag (6,010,000,000 samples, 0.05%)</title><rect x="651.1" y="389" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="654.13" y="399.5" ></text>
</g>
<g >
<title>new_sync_read (1,330,000,000 samples, 0.01%)</title><rect x="313.0" y="293" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="315.96" y="303.5" ></text>
</g>
<g >
<title>filemap_read (157,080,000,000 samples, 1.40%)</title><rect x="217.0" y="197" width="16.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="219.96" y="207.5" ></text>
</g>
<g >
<title>__fget_files (4,550,000,000 samples, 0.04%)</title><rect x="37.5" y="277" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="40.54" y="287.5" ></text>
</g>
<g >
<title>new_sync_write (13,240,000,000 samples, 0.12%)</title><rect x="1168.6" y="501" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1171.64" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::SyncMetricStorage::Collect (4,780,000,000 samples, 0.04%)</title><rect x="1189.4" y="309" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1192.40" y="319.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (1,000,000,000 samples, 0.01%)</title><rect x="1164.6" y="437" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1167.61" y="447.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (2,430,000,000 samples, 0.02%)</title><rect x="1093.8" y="149" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1096.83" y="159.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (1,540,000,000 samples, 0.01%)</title><rect x="312.9" y="405" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="315.95" y="415.5" ></text>
</g>
<g >
<title>GlassPostList::get_wdf (1,340,000,000 samples, 0.01%)</title><rect x="711.0" y="453" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="713.99" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::Get (3,090,000,000 samples, 0.03%)</title><rect x="268.1" y="245" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="271.10" y="255.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::AttributesHashMap::GetAllEnteries (3,660,000,000 samples, 0.03%)</title><rect x="1189.4" y="277" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1192.40" y="287.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (9,050,000,000 samples, 0.08%)</title><rect x="264.1" y="181" width="1.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="267.10" y="191.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,000,000,000 samples, 0.02%)</title><rect x="649.7" y="245" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="652.69" y="255.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (21,760,000,000 samples, 0.19%)</title><rect x="1052.6" y="325" width="2.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1055.61" y="335.5" ></text>
</g>
<g >
<title>xas_start (2,550,000,000 samples, 0.02%)</title><rect x="990.5" y="117" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="993.48" y="127.5" ></text>
</g>
<g >
<title>filemap_get_pages (2,090,000,000 samples, 0.02%)</title><rect x="627.9" y="213" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="630.87" y="223.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::SeekImpl (9,990,000,000 samples, 0.09%)</title><rect x="265.2" y="181" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="268.19" y="191.5" ></text>
</g>
<g >
<title>filemap_get_pages (14,880,000,000 samples, 0.13%)</title><rect x="253.1" y="197" width="1.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="256.08" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1,510,000,000 samples, 0.01%)</title><rect x="1041.1" y="373" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1044.14" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::common::GetHashForAttributeMap (3,200,000,000 samples, 0.03%)</title><rect x="1163.3" y="405" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1166.35" y="415.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (1,770,000,000 samples, 0.02%)</title><rect x="992.8" y="197" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="995.85" y="207.5" ></text>
</g>
<g >
<title>mark_page_accessed (2,820,000,000 samples, 0.03%)</title><rect x="990.9" y="165" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="993.86" y="175.5" ></text>
</g>
<g >
<title>fput_many (1,980,000,000 samples, 0.02%)</title><rect x="38.2" y="309" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="41.21" y="319.5" ></text>
</g>
<g >
<title>mark_page_accessed (1,920,000,000 samples, 0.02%)</title><rect x="649.1" y="213" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="652.08" y="223.5" ></text>
</g>
<g >
<title>aisearch::SUSearchServiceAsyncProcessor::executeRequest_Search&lt;apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter&gt; (4,790,000,000 samples, 0.04%)</title><rect x="26.8" y="565" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="29.82" y="575.5" ></text>
</g>
<g >
<title>pack_glass_postlist_key (10,100,000,000 samples, 0.09%)</title><rect x="257.1" y="389" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="260.07" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (11,620,000,000 samples, 0.10%)</title><rect x="1168.7" y="437" width="1.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1171.74" y="447.5" ></text>
</g>
<g >
<title>ThriftIO11 (1,320,000,000 samples, 0.01%)</title><rect x="14.6" y="613" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="17.62" y="623.5" ></text>
</g>
<g >
<title>Xapian::MSetIterator::get_document (5,050,000,000 samples, 0.05%)</title><rect x="1159.1" y="517" width="0.5" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="1162.05" y="527.5" ></text>
</g>
<g >
<title>[unknown] (3,360,000,000 samples, 0.03%)</title><rect x="1182.5" y="581" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.52" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (6,780,000,000 samples, 0.06%)</title><rect x="1055.6" y="261" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1058.55" y="271.5" ></text>
</g>
<g >
<title>Glass::ValueChunkReader::skip_to (31,040,000,000 samples, 0.28%)</title><rect x="30.4" y="453" width="3.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="33.43" y="463.5" ></text>
</g>
<g >
<title>filemap_get_pages (64,510,000,000 samples, 0.58%)</title><rect x="59.7" y="229" width="6.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="62.66" y="239.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (1,040,000,000 samples, 0.01%)</title><rect x="266.9" y="149" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="269.93" y="159.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (122,850,000,000 samples, 1.10%)</title><rect x="603.2" y="245" width="12.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="606.15" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,350,000,000 samples, 0.03%)</title><rect x="664.1" y="293" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="667.14" y="303.5" ></text>
</g>
<g >
<title>GlassTable::read_block (217,690,000,000 samples, 1.94%)</title><rect x="1013.1" y="341" width="22.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1016.06" y="351.5" >G..</text>
</g>
<g >
<title>rw_verify_area (3,560,000,000 samples, 0.03%)</title><rect x="233.6" y="245" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="236.55" y="255.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (16,360,000,000 samples, 0.15%)</title><rect x="259.7" y="245" width="1.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="262.75" y="255.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (92,990,000,000 samples, 0.83%)</title><rect x="1172.2" y="597" width="9.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1175.15" y="607.5" ></text>
</g>
<g >
<title>filemap_get_pages (2,790,000,000 samples, 0.02%)</title><rect x="1010.6" y="181" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1013.62" y="191.5" ></text>
</g>
<g >
<title>kl::meta::MetaManager::read_term_count (4,730,000,000 samples, 0.04%)</title><rect x="268.0" y="341" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="270.97" y="351.5" ></text>
</g>
<g >
<title>apache::thrift::Client&lt;aisearch::SUSearchService&gt;::ShardSearchT&lt;apache::thrift::CompactProtocolWriter, apache::thrift::RpcOptions&amp;&gt; (1,500,000,000 samples, 0.01%)</title><rect x="26.9" y="453" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="29.95" y="463.5" ></text>
</g>
<g >
<title>aa_file_perm (2,020,000,000 samples, 0.02%)</title><rect x="67.8" y="245" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="70.80" y="255.5" ></text>
</g>
<g >
<title>GlassTable::read_block (333,880,000,000 samples, 2.98%)</title><rect x="35.2" y="389" width="35.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="38.19" y="399.5" >Gl..</text>
</g>
<g >
<title>aisearch::SUSearchResult::write&lt;apache::thrift::CompactProtocolWriter&gt; (2,560,000,000 samples, 0.02%)</title><rect x="1182.6" y="437" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1185.59" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (960,000,000 samples, 0.01%)</title><rect x="658.2" y="405" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="661.23" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,360,000,000 samples, 0.07%)</title><rect x="659.1" y="325" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="662.08" y="335.5" ></text>
</g>
<g >
<title>GlassTable::read_block (202,380,000,000 samples, 1.81%)</title><rect x="629.8" y="373" width="21.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="632.77" y="383.5" >G..</text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::LongCounter&lt;unsigned long&gt;::Add (12,550,000,000 samples, 0.11%)</title><rect x="1163.3" y="517" width="1.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1166.26" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,290,000,000 samples, 0.07%)</title><rect x="1055.6" y="293" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1058.55" y="303.5" ></text>
</g>
<g >
<title>xas_load (6,420,000,000 samples, 0.06%)</title><rect x="1033.0" y="149" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1035.99" y="159.5" ></text>
</g>
<g >
<title>GlassPostList::get_docid (38,970,000,000 samples, 0.35%)</title><rect x="301.0" y="453" width="4.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="304.05" y="463.5" ></text>
</g>
<g >
<title>GlassTable::form_key (3,390,000,000 samples, 0.03%)</title><rect x="626.4" y="389" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="629.41" y="399.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__deduce_visit_result&lt;std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, opentelemetry::v1::sdk::common::AttributeConverter&amp;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt;&amp;&gt; (1,400,000,000 samples, 0.01%)</title><rect x="1163.4" y="357" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1166.39" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,140,000,000 samples, 0.02%)</title><rect x="24.4" y="565" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.38" y="575.5" ></text>
</g>
<g >
<title>vfs_read (24,440,000,000 samples, 0.22%)</title><rect x="75.3" y="325" width="2.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="78.28" y="335.5" ></text>
</g>
<g >
<title>kl::server::GrammarContext::buildOrQuery (2,410,000,000 samples, 0.02%)</title><rect x="1162.4" y="501" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1165.41" y="511.5" ></text>
</g>
<g >
<title>vfs_read (18,380,000,000 samples, 0.16%)</title><rect x="80.9" y="293" width="2.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="83.94" y="303.5" ></text>
</g>
<g >
<title>Xapian::Internal::MSetItem::operator= (3,400,000,000 samples, 0.03%)</title><rect x="1118.7" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1121.66" y="463.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1,900,000,000 samples, 0.02%)</title><rect x="664.7" y="197" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="667.73" y="207.5" ></text>
</g>
<g >
<title>[unknown] (1,080,000,000 samples, 0.01%)</title><rect x="12.6" y="597" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.60" y="607.5" ></text>
</g>
<g >
<title>IOThreadPool21 (1,340,000,000 samples, 0.01%)</title><rect x="12.9" y="613" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="15.90" y="623.5" ></text>
</g>
<g >
<title>__seccomp_filter (1,620,000,000 samples, 0.01%)</title><rect x="255.7" y="245" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="258.67" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,290,000,000 samples, 0.03%)</title><rect x="1166.8" y="533" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1169.76" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (990,000,000 samples, 0.01%)</title><rect x="214.6" y="325" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="217.60" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,960,000,000 samples, 0.06%)</title><rect x="705.4" y="341" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="708.44" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,610,000,000 samples, 0.16%)</title><rect x="1092.4" y="293" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1095.40" y="303.5" ></text>
</g>
<g >
<title>mark_page_accessed (1,520,000,000 samples, 0.01%)</title><rect x="615.7" y="197" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="618.73" y="207.5" ></text>
</g>
<g >
<title>IOThreadPool4 (1,510,000,000 samples, 0.01%)</title><rect x="13.7" y="613" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.66" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;opentelemetry::v1::context::Context::DataList*,  (5,380,000,000 samples, 0.05%)</title><rect x="1165.4" y="501" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1168.40" y="511.5" ></text>
</g>
<g >
<title>GlassTable::find (23,990,000,000 samples, 0.21%)</title><rect x="1092.2" y="357" width="2.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1095.17" y="367.5" ></text>
</g>
<g >
<title>GlassCursor::get_key (2,070,000,000 samples, 0.02%)</title><rect x="628.7" y="405" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="631.69" y="415.5" ></text>
</g>
<g >
<title>ThriftSrv-pri3- (11,104,290,000,000 samples, 99.19%)</title><rect x="18.8" y="613" width="1170.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="21.82" y="623.5" >ThriftSrv-pri3-</text>
</g>
<g >
<title>kl::server::Handler::future_Search (4,020,000,000 samples, 0.04%)</title><rect x="26.9" y="533" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.88" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::~Span (5,030,000,000 samples, 0.04%)</title><rect x="1165.4" y="453" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1168.43" y="463.5" ></text>
</g>
<g >
<title>read_start_of_chunk (2,500,000,000 samples, 0.02%)</title><rect x="258.1" y="389" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="261.13" y="399.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (266,800,000,000 samples, 2.38%)</title><rect x="39.3" y="277" width="28.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="42.25" y="287.5" >e..</text>
</g>
<g >
<title>vfs_open (1,290,000,000 samples, 0.01%)</title><rect x="23.6" y="453" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="26.62" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::variant&lt;bool, int, unsigned int, long, double, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (990,000,000 samples, 0.01%)</title><rect x="1164.2" y="325" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1167.16" y="335.5" ></text>
</g>
<g >
<title>aa_file_perm (1,020,000,000 samples, 0.01%)</title><rect x="649.8" y="229" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="652.77" y="239.5" ></text>
</g>
<g >
<title>__vfscanf_internal (1,720,000,000 samples, 0.02%)</title><rect x="24.2" y="565" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="27.20" y="575.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (70,260,000,000 samples, 0.63%)</title><rect x="983.4" y="149" width="7.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="986.37" y="159.5" ></text>
</g>
<g >
<title>ksys_write (1,280,000,000 samples, 0.01%)</title><rect x="1166.6" y="485" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1169.60" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (980,000,000 samples, 0.01%)</title><rect x="1094.7" y="309" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1097.73" y="319.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::SyncMetricStorage::SyncMetricStorage (1,810,000,000 samples, 0.02%)</title><rect x="1164.8" y="389" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1167.83" y="399.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (2,280,000,000 samples, 0.02%)</title><rect x="652.6" y="405" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="655.57" y="415.5" ></text>
</g>
<g >
<title>generic_file_read_iter (17,450,000,000 samples, 0.16%)</title><rect x="1052.9" y="181" width="1.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1055.89" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,280,000,000 samples, 0.07%)</title><rect x="1095.0" y="309" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1097.95" y="319.5" ></text>
</g>
<g >
<title>do_sys_openat2 (5,880,000,000 samples, 0.05%)</title><rect x="23.5" y="517" width="0.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="26.47" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8,240,000,000 samples, 0.07%)</title><rect x="1184.5" y="597" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1187.54" y="607.5" ></text>
</g>
<g >
<title>GlassTable::read_block (3,490,000,000 samples, 0.03%)</title><rect x="664.1" y="341" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="667.13" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1,160,000,000 samples, 0.01%)</title><rect x="658.3" y="405" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="661.33" y="415.5" ></text>
</g>
<g >
<title>xas_load (34,750,000,000 samples, 0.31%)</title><rect x="62.8" y="197" width="3.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="65.75" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,820,000,000 samples, 0.02%)</title><rect x="80.4" y="437" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="83.43" y="447.5" ></text>
</g>
<g >
<title>vfs_read (281,900,000,000 samples, 2.52%)</title><rect x="38.5" y="309" width="29.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="41.49" y="319.5" >vf..</text>
</g>
<g >
<title>check_tname_in_key_lite (32,560,000,000 samples, 0.29%)</title><rect x="652.8" y="405" width="3.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="655.81" y="415.5" ></text>
</g>
<g >
<title>Xapian::Internal::QueryTerm::postlist (79,830,000,000 samples, 0.71%)</title><rect x="259.4" y="357" width="8.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="262.38" y="367.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4,160,000,000 samples, 0.04%)</title><rect x="703.6" y="245" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="706.60" y="255.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;Xapian::Internal::MSetItem*, std::vector&lt;Xapian::Internal::MSetItem, std::allocator&lt;Xapian::Internal::MSetItem&gt; &gt; &gt;, long, Xapian::Internal::MSetItem, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool  (203,650,000,000 samples, 1.82%)</title><rect x="1122.1" y="453" width="21.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1125.11" y="463.5" >s..</text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (165,770,000,000 samples, 1.48%)</title><rect x="685.1" y="421" width="17.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="688.11" y="431.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (5,880,000,000 samples, 0.05%)</title><rect x="704.3" y="261" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="707.25" y="271.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (159,260,000,000 samples, 1.42%)</title><rect x="216.8" y="229" width="16.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="219.75" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,930,000,000 samples, 0.06%)</title><rect x="704.2" y="341" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="707.21" y="351.5" ></text>
</g>
<g >
<title>GlassPostList::skip_to (16,740,000,000 samples, 0.15%)</title><rect x="313.3" y="437" width="1.8" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="316.34" y="447.5" ></text>
</g>
<g >
<title>__cond_resched (1,170,000,000 samples, 0.01%)</title><rect x="948.1" y="165" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="951.11" y="175.5" ></text>
</g>
<g >
<title>Xapian::Weight::Internal::accumulate_stats (25,700,000,000 samples, 0.23%)</title><rect x="80.7" y="453" width="2.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="83.67" y="463.5" ></text>
</g>
<g >
<title>GlassPostListTable::get_doclength (121,850,000,000 samples, 1.09%)</title><rect x="1083.2" y="421" width="12.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1086.23" y="431.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (219,250,000,000 samples, 1.96%)</title><rect x="628.9" y="405" width="23.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="631.91" y="415.5" >G..</text>
</g>
<g >
<title>MultiAndPostList::next (1,850,000,000 samples, 0.02%)</title><rect x="79.9" y="485" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="82.87" y="495.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (1,160,000,000 samples, 0.01%)</title><rect x="242.4" y="373" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="245.40" y="383.5" ></text>
</g>
<g >
<title>Glass::make_valuechunk_key[abi:cxx11] (2,220,000,000 samples, 0.02%)</title><rect x="34.1" y="437" width="0.2" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="37.06" y="447.5" ></text>
</g>
<g >
<title>__libc_pread (146,830,000,000 samples, 1.31%)</title><rect x="601.7" y="341" width="15.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="604.71" y="351.5" ></text>
</g>
<g >
<title>__secure_computing (3,120,000,000 samples, 0.03%)</title><rect x="234.6" y="245" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="237.63" y="255.5" ></text>
</g>
<g >
<title>touch_atime (1,560,000,000 samples, 0.01%)</title><rect x="254.7" y="197" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="257.71" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (313,310,000,000 samples, 2.80%)</title><rect x="37.2" y="341" width="33.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.22" y="351.5" >do..</text>
</g>
<g >
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (6,820,000,000 samples, 0.06%)</title><rect x="264.3" y="149" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="267.29" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_timer_delete (1,230,000,000 samples, 0.01%)</title><rect x="1158.6" y="437" width="0.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1161.59" y="447.5" ></text>
</g>
<g >
<title>generic_file_read_iter (122,240,000,000 samples, 1.09%)</title><rect x="603.2" y="229" width="12.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="606.22" y="239.5" ></text>
</g>
<g >
<title>xas_load (980,000,000 samples, 0.01%)</title><rect x="1054.6" y="117" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1057.58" y="127.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (1,590,000,000 samples, 0.01%)</title><rect x="659.7" y="197" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="662.69" y="207.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,050,000,000 samples, 0.01%)</title><rect x="1054.8" y="245" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1057.78" y="255.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::common::OrderedAttributeMap::OrderedAttributeMap (1,460,000,000 samples, 0.01%)</title><rect x="1164.1" y="437" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1167.14" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (7,180,000,000 samples, 0.06%)</title><rect x="19.2" y="597" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="22.23" y="607.5" ></text>
</g>
<g >
<title>filemap_read (10,790,000,000 samples, 0.10%)</title><rect x="627.0" y="229" width="1.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="630.02" y="239.5" ></text>
</g>
<g >
<title>ThriftIO5 (1,430,000,000 samples, 0.01%)</title><rect x="18.3" y="613" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="21.29" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (2,130,000,000 samples, 0.02%)</title><rect x="1163.7" y="421" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1166.73" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (3,670,000,000 samples, 0.03%)</title><rect x="933.3" y="373" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="936.33" y="383.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (12,340,000,000 samples, 0.11%)</title><rect x="260.0" y="117" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="263.00" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,130,000,000 samples, 0.01%)</title><rect x="314.9" y="325" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="317.94" y="335.5" ></text>
</g>
<g >
<title>kl::server::Handler::future_Search (3,310,000,000 samples, 0.03%)</title><rect x="10.4" y="501" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.39" y="511.5" ></text>
</g>
<g >
<title>GlassTable::read_block (7,410,000,000 samples, 0.07%)</title><rect x="704.2" y="373" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="707.16" y="383.5" ></text>
</g>
<g >
<title>vfs_read (7,630,000,000 samples, 0.07%)</title><rect x="659.1" y="293" width="0.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="662.11" y="303.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (23,120,000,000 samples, 0.21%)</title><rect x="75.4" y="293" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="78.35" y="303.5" ></text>
</g>
<g >
<title>ai_index (1,230,000,000 samples, 0.01%)</title><rect x="1189.2" y="613" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1192.21" y="623.5" ></text>
</g>
<g >
<title>path_openat (5,020,000,000 samples, 0.04%)</title><rect x="23.5" y="485" width="0.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="26.48" y="495.5" ></text>
</g>
<g >
<title>GlassCursor::find_entry (287,710,000,000 samples, 2.57%)</title><rect x="598.4" y="405" width="30.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="601.36" y="415.5" >Gl..</text>
</g>
<g >
<title>Xapian::Internal::QueryAnd::get_description[abi:cxx11] (3,870,000,000 samples, 0.03%)</title><rect x="1159.6" y="501" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1162.62" y="511.5" ></text>
</g>
<g >
<title>__fdget (10,490,000,000 samples, 0.09%)</title><rect x="943.1" y="245" width="1.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="946.13" y="255.5" ></text>
</g>
<g >
<title>GlassPostList::at_end (48,910,000,000 samples, 0.44%)</title><rect x="295.8" y="453" width="5.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="298.85" y="463.5" ></text>
</g>
<g >
<title>ThriftIO32 (1,370,000,000 samples, 0.01%)</title><rect x="17.5" y="613" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="20.47" y="623.5" ></text>
</g>
<g >
<title>MultiMatch::getorrecalc_maxweight (4,490,000,000 samples, 0.04%)</title><rect x="1075.6" y="469" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1078.59" y="479.5" ></text>
</g>
<g >
<title>irqentry_exit (2,080,000,000 samples, 0.02%)</title><rect x="211.4" y="357" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="214.40" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;opentelemetry::v1::sdk::metrics::AttributesHashMap,  (1,110,000,000 samples, 0.01%)</title><rect x="1189.8" y="277" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1192.78" y="287.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (23,650,000,000 samples, 0.21%)</title><rect x="230.6" y="165" width="2.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="233.60" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (13,290,000,000 samples, 0.12%)</title><rect x="259.9" y="165" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="262.93" y="175.5" ></text>
</g>
<g >
<title>GlassPostList::~GlassPostList (1,290,000,000 samples, 0.01%)</title><rect x="1075.4" y="405" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1078.43" y="415.5" ></text>
</g>
<g >
<title>GlassTable::next_for_sequential (7,640,000,000 samples, 0.07%)</title><rect x="704.1" y="389" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="707.14" y="399.5" ></text>
</g>
<g >
<title>GlassPostList::skip_to (75,190,000,000 samples, 0.67%)</title><rect x="305.3" y="453" width="7.9" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="308.26" y="463.5" ></text>
</g>
<g >
<title>current_time (1,200,000,000 samples, 0.01%)</title><rect x="1034.0" y="149" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1037.01" y="159.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (1,660,000,000 samples, 0.01%)</title><rect x="263.0" y="165" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="265.97" y="175.5" ></text>
</g>
<g >
<title>filemap_get_pages (3,510,000,000 samples, 0.03%)</title><rect x="77.3" y="245" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="80.34" y="255.5" ></text>
</g>
<g >
<title>seccomp_run_filters (2,170,000,000 samples, 0.02%)</title><rect x="69.9" y="261" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="72.85" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt;, opentelemetry::v1::sdk::metrics::SyncMetricStorage::SyncMetricStorage (1,840,000,000 samples, 0.02%)</title><rect x="1164.8" y="421" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1167.82" y="431.5" ></text>
</g>
<g >
<title>GlassTable::find (5,160,000,000 samples, 0.05%)</title><rect x="664.1" y="373" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="667.09" y="383.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (18,800,000,000 samples, 0.17%)</title><rect x="1170.2" y="597" width="2.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1173.17" y="607.5" ></text>
</g>
<g >
<title>kl::storage::Storage::get (4,680,000,000 samples, 0.04%)</title><rect x="268.0" y="325" width="0.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="270.97" y="335.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (15,940,000,000 samples, 0.14%)</title><rect x="72.0" y="405" width="1.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="74.99" y="415.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,030,000,000 samples, 0.01%)</title><rect x="628.2" y="309" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="631.21" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (1,030,000,000 samples, 0.01%)</title><rect x="268.1" y="229" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="271.15" y="239.5" ></text>
</g>
<g >
<title>IOThreadPool2 (1,430,000,000 samples, 0.01%)</title><rect x="13.4" y="613" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="16.35" y="623.5" ></text>
</g>
<g >
<title>GlassTable::find (7,670,000,000 samples, 0.07%)</title><rect x="702.7" y="389" width="0.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="705.70" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,600,000,000 samples, 0.24%)</title><rect x="75.2" y="357" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="78.20" y="367.5" ></text>
</g>
<g >
<title>new_sync_read (176,410,000,000 samples, 1.58%)</title><rect x="1015.6" y="245" width="18.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1018.62" y="255.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (17,640,000,000 samples, 0.16%)</title><rect x="81.0" y="261" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="83.97" y="271.5" ></text>
</g>
<g >
<title>__seccomp_filter (3,020,000,000 samples, 0.03%)</title><rect x="1035.5" y="229" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1038.52" y="239.5" ></text>
</g>
<g >
<title>GlassDatabase::get_doclength (2,650,000,000 samples, 0.02%)</title><rect x="709.8" y="453" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="712.84" y="463.5" ></text>
</g>
<g >
<title>kl::storage::Storage::get (48,960,000,000 samples, 0.44%)</title><rect x="262.3" y="277" width="5.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="265.35" y="287.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (9,450,000,000 samples, 0.08%)</title><rect x="659.0" y="405" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="662.00" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (1,460,000,000 samples, 0.01%)</title><rect x="35.4" y="373" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="38.39" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (503,850,000,000 samples, 4.50%)</title><rect x="942.7" y="293" width="53.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="945.73" y="303.5" >entry..</text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (990,000,000 samples, 0.01%)</title><rect x="1164.6" y="421" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1167.61" y="431.5" ></text>
</g>
<g >
<title>__fdget (3,990,000,000 samples, 0.04%)</title><rect x="215.7" y="261" width="0.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="218.75" y="271.5" ></text>
</g>
<g >
<title>apache::thrift::HandlerCallback&lt;std::unique_ptr&lt;aisearch::SUSearchResult, std::default_delete&lt;aisearch::SUSearchResult&gt; &gt; &gt;::doResult (3,090,000,000 samples, 0.03%)</title><rect x="1182.5" y="485" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1185.54" y="495.5" ></text>
</g>
<g >
<title>xas_start (1,570,000,000 samples, 0.01%)</title><rect x="66.3" y="181" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="69.25" y="191.5" ></text>
</g>
<g >
<title>OrPostList::check (10,300,000,000 samples, 0.09%)</title><rect x="1077.5" y="469" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1080.47" y="479.5" ></text>
</g>
<g >
<title>IOThreadPool6 (1,490,000,000 samples, 0.01%)</title><rect x="14.0" y="613" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="16.96" y="623.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (3,270,000,000 samples, 0.03%)</title><rect x="77.4" y="229" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="80.36" y="239.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (3,400,000,000 samples, 0.03%)</title><rect x="1057.4" y="437" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1060.41" y="447.5" ></text>
</g>
<g >
<title>MultiAndPostList::skip_to (1,960,000,000 samples, 0.02%)</title><rect x="315.1" y="453" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="318.11" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::SyncMetricStorage::RecordLong (1,130,000,000 samples, 0.01%)</title><rect x="27.2" y="485" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="30.16" y="495.5" ></text>
</g>
<g >
<title>apache::thrift::HandlerCallback&lt;std::unique_ptr&lt;aisearch::SUSearchResult, std::default_delete&lt;aisearch::SUSearchResult&gt; &gt; &gt;::doResult (4,230,000,000 samples, 0.04%)</title><rect x="28.4" y="533" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="31.36" y="543.5" ></text>
</g>
<g >
<title>IOThreadPool20 (1,380,000,000 samples, 0.01%)</title><rect x="12.8" y="613" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="15.76" y="623.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5,040,000,000 samples, 0.05%)</title><rect x="241.5" y="197" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="244.49" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21,720,000,000 samples, 0.19%)</title><rect x="1008.9" y="309" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1011.94" y="319.5" ></text>
</g>
<g >
<title>LeafPostList::get_weight (3,143,910,000,000 samples, 28.08%)</title><rect x="711.1" y="453" width="331.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="714.13" y="463.5" >LeafPostList::get_weight</text>
</g>
<g >
<title>GlassTable::next_for_sequential (28,850,000,000 samples, 0.26%)</title><rect x="75.0" y="421" width="3.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="77.98" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::~Span (4,890,000,000 samples, 0.04%)</title><rect x="1165.4" y="437" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1168.44" y="447.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (4,970,000,000 samples, 0.04%)</title><rect x="82.2" y="197" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="85.16" y="207.5" ></text>
</g>
<g >
<title>io_read_block (1,130,000,000 samples, 0.01%)</title><rect x="995.8" y="309" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="998.84" y="319.5" ></text>
</g>
<g >
<title>IOThreadPool0 (1,390,000,000 samples, 0.01%)</title><rect x="10.9" y="613" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.91" y="623.5" ></text>
</g>
<g >
<title>__libc_pread (18,510,000,000 samples, 0.17%)</title><rect x="1092.3" y="309" width="2.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1095.30" y="319.5" ></text>
</g>
<g >
<title>apache::thrift::Client&lt;aisearch::SUSearchService&gt;::ShardSearchImpl (1,530,000,000 samples, 0.01%)</title><rect x="26.9" y="469" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="29.95" y="479.5" ></text>
</g>
<g >
<title>zap_page_range (2,050,000,000 samples, 0.02%)</title><rect x="24.4" y="501" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="27.39" y="511.5" ></text>
</g>
<g >
<title>find_in_branch_&lt;Glass::LeafItem&gt; (1,680,000,000 samples, 0.02%)</title><rect x="628.5" y="389" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="631.51" y="399.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (1,130,000,000 samples, 0.01%)</title><rect x="936.6" y="357" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="939.62" y="367.5" ></text>
</g>
<g >
<title>Xapian::MiniRankWeight::MiniRankWeight (1,860,000,000 samples, 0.02%)</title><rect x="261.9" y="309" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="264.88" y="319.5" ></text>
</g>
<g >
<title>security_file_permission (6,640,000,000 samples, 0.06%)</title><rect x="67.5" y="277" width="0.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="70.47" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,520,000,000 samples, 0.09%)</title><rect x="241.3" y="309" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="244.28" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (5,170,000,000 samples, 0.05%)</title><rect x="596.4" y="341" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="599.43" y="351.5" ></text>
</g>
<g >
<title>filemap_get_pages (1,050,000,000 samples, 0.01%)</title><rect x="704.7" y="213" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="707.73" y="223.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2,890,000,000 samples, 0.03%)</title><rect x="664.2" y="229" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="667.16" y="239.5" ></text>
</g>
<g >
<title>generic_file_read_iter (435,970,000,000 samples, 3.89%)</title><rect x="946.1" y="197" width="45.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="949.07" y="207.5" >gene..</text>
</g>
<g >
<title>new_sync_read (6,200,000,000 samples, 0.06%)</title><rect x="705.5" y="277" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="708.48" y="287.5" ></text>
</g>
<g >
<title>fput_many (1,000,000,000 samples, 0.01%)</title><rect x="631.6" y="293" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="634.59" y="303.5" ></text>
</g>
<g >
<title>xas_load (990,000,000 samples, 0.01%)</title><rect x="261.2" y="37" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="264.17" y="47.5" ></text>
</g>
<g >
<title>IOThreadPool3 (1,440,000,000 samples, 0.01%)</title><rect x="13.5" y="613" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="16.50" y="623.5" ></text>
</g>
<g >
<title>GlassPostList::next_in_chunk (6,980,000,000 samples, 0.06%)</title><rect x="1074.5" y="421" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1077.49" y="431.5" ></text>
</g>
<g >
<title>Xapian::MiniRankWeight::init (51,610,000,000 samples, 0.46%)</title><rect x="262.1" y="325" width="5.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="265.11" y="335.5" ></text>
</g>
<g >
<title>__fget_light (2,370,000,000 samples, 0.02%)</title><rect x="244.2" y="261" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="247.16" y="271.5" ></text>
</g>
<g >
<title>Xapian::Enquire::Internal::get_document (2,830,000,000 samples, 0.03%)</title><rect x="1159.3" y="485" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1162.29" y="495.5" ></text>
</g>
<g >
<title>__strlen_evex (2,360,000,000 samples, 0.02%)</title><rect x="1105.2" y="469" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1108.24" y="479.5" ></text>
</g>
<g >
<title>__secure_computing (3,360,000,000 samples, 0.03%)</title><rect x="650.7" y="277" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="653.66" y="287.5" ></text>
</g>
<g >
<title>GlassPostList::next (12,730,000,000 samples, 0.11%)</title><rect x="1097.6" y="453" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1100.61" y="463.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4,840,000,000 samples, 0.04%)</title><rect x="659.2" y="213" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="662.18" y="223.5" ></text>
</g>
<g >
<title>apache::thrift::preprocessSendT&lt;apache::thrift::CompactProtocolWriter&gt; (1,070,000,000 samples, 0.01%)</title><rect x="27.0" y="405" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="29.98" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;std::unique_ptr&lt;opentelemetry::v1::sdk::metrics::Aggregation, std::default_delete&lt;opentelemetry::v1::sdk::metrics::Aggregation&gt; &gt;, opentelemetry::v1::sdk::metrics::SyncMetricStorage::SyncMetricStorage (960,000,000 samples, 0.01%)</title><rect x="1164.0" y="421" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1167.02" y="431.5" ></text>
</g>
<g >
<title>__libc_pread (10,090,000,000 samples, 0.09%)</title><rect x="241.2" y="341" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="244.22" y="351.5" ></text>
</g>
<g >
<title>generic_file_read_iter (12,310,000,000 samples, 0.11%)</title><rect x="260.0" y="101" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="263.00" y="111.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1,020,000,000 samples, 0.01%)</title><rect x="596.3" y="405" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="599.31" y="415.5" ></text>
</g>
<g >
<title>filemap_get_pages (1,230,000,000 samples, 0.01%)</title><rect x="74.5" y="245" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="77.51" y="255.5" ></text>
</g>
<g >
<title>aa_file_perm (1,290,000,000 samples, 0.01%)</title><rect x="1034.5" y="197" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1037.46" y="207.5" ></text>
</g>
<g >
<title>new_sync_read (18,220,000,000 samples, 0.16%)</title><rect x="1009.1" y="245" width="1.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1012.08" y="255.5" ></text>
</g>
<g >
<title>vfs_read (100,820,000,000 samples, 0.90%)</title><rect x="244.6" y="277" width="10.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="247.56" y="287.5" ></text>
</g>
<g >
<title>ThriftIO18 (1,430,000,000 samples, 0.01%)</title><rect x="15.5" y="613" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="18.51" y="623.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (1,040,000,000 samples, 0.01%)</title><rect x="265.5" y="149" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="268.51" y="159.5" ></text>
</g>
<g >
<title>atime_needs_update (1,320,000,000 samples, 0.01%)</title><rect x="254.7" y="181" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="257.74" y="191.5" ></text>
</g>
<g >
<title>OrPostList::get_weight (1,120,000,000 samples, 0.01%)</title><rect x="1155.0" y="485" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1158.01" y="495.5" ></text>
</g>
<g >
<title>asm_common_interrupt (960,000,000 samples, 0.01%)</title><rect x="933.2" y="373" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="936.21" y="383.5" ></text>
</g>
<g >
<title>aisearch::SUSearchRequest::readNoXfer&lt;apache::thrift::CompactProtocolReader&gt; (2,640,000,000 samples, 0.02%)</title><rect x="27.4" y="517" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="30.41" y="527.5" ></text>
</g>
<g >
<title>GlassTable::find_in_leaf (26,080,000,000 samples, 0.23%)</title><rect x="996.0" y="341" width="2.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="999.01" y="351.5" ></text>
</g>
<g >
<title>[unknown] (10,892,470,000,000 samples, 97.29%)</title><rect x="20.0" y="597" width="1148.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.98" y="607.5" >[unknown]</text>
</g>
<g >
<title>GlassTable::find (372,240,000,000 samples, 3.32%)</title><rect x="34.4" y="421" width="39.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="37.44" y="431.5" >Gla..</text>
</g>
<g >
<title>__x64_sys_pread64 (133,080,000,000 samples, 1.19%)</title><rect x="602.4" y="293" width="14.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="605.37" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (980,000,000 samples, 0.01%)</title><rect x="1094.7" y="293" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1097.73" y="303.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (12,370,000,000 samples, 0.11%)</title><rect x="1053.0" y="149" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1056.03" y="159.5" ></text>
</g>
<g >
<title>Xapian::Enquire::get_mset (10,244,620,000,000 samples, 91.51%)</title><rect x="79.0" y="517" width="1079.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="82.03" y="527.5" >Xapian::Enquire::get_mset</text>
</g>
<g >
<title>xas_load (3,590,000,000 samples, 0.03%)</title><rect x="254.3" y="165" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="257.25" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::_Alloc_node&gt; (1,240,000,000 samples, 0.01%)</title><rect x="261.9" y="293" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="264.94" y="303.5" ></text>
</g>
<g >
<title>folly::CPUThreadPoolExecutor::~CPUThreadPoolExecutor (3,650,000,000 samples, 0.03%)</title><rect x="10.4" y="581" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.36" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::metrics::MetricCollector::Collect (4,790,000,000 samples, 0.04%)</title><rect x="1189.4" y="421" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1192.40" y="431.5" ></text>
</g>
<g >
<title>[unknown] (5,810,000,000 samples, 0.05%)</title><rect x="20.6" y="565" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.63" y="575.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (4,530,000,000 samples, 0.04%)</title><rect x="1041.6" y="405" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1044.56" y="415.5" ></text>
</g>
<g >
<title>GlassCursor::read_tag (3,730,000,000 samples, 0.03%)</title><rect x="664.7" y="389" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="667.66" y="399.5" ></text>
</g>
<g >
<title>LeafPostList::get_weight (118,560,000,000 samples, 1.06%)</title><rect x="1044.1" y="437" width="12.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1047.09" y="447.5" ></text>
</g>
<g >
<title>xa_load (1,100,000,000 samples, 0.01%)</title><rect x="80.5" y="325" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="83.47" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (5,320,000,000 samples, 0.05%)</title><rect x="264.3" y="133" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="267.35" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2,070,000,000 samples, 0.02%)</title><rect x="1111.4" y="469" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1114.41" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_write (15,010,000,000 samples, 0.13%)</title><rect x="1168.5" y="597" width="1.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1171.53" y="607.5" ></text>
</g>
<g >
<title>GlassTable::block_to_cursor (19,330,000,000 samples, 0.17%)</title><rect x="1092.2" y="341" width="2.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1095.22" y="351.5" ></text>
</g>
<g >
<title>__libc_pread (8,640,000,000 samples, 0.08%)</title><rect x="1094.9" y="325" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1097.91" y="335.5" ></text>
</g>
<g >
<title>GlassTable::find (263,540,000,000 samples, 2.35%)</title><rect x="213.1" y="373" width="27.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="216.08" y="383.5" >G..</text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::FilePicker::GetNextFile (1,820,000,000 samples, 0.02%)</title><rect x="263.3" y="213" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="266.27" y="223.5" ></text>
</g>
<g >
<title>GlassPostList::move_to_chunk_containing (1,780,000,000 samples, 0.02%)</title><rect x="345.3" y="437" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="348.32" y="447.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (9,700,000,000 samples, 0.09%)</title><rect x="994.7" y="245" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="997.69" y="255.5" ></text>
</g>
<g >
<title>GlassPostList::next_in_chunk (1,000,000,000 samples, 0.01%)</title><rect x="1075.2" y="437" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1078.23" y="447.5" ></text>
</g>
<g >
<title>new_sync_read (7,470,000,000 samples, 0.07%)</title><rect x="659.1" y="277" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="662.12" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (1,720,000,000 samples, 0.02%)</title><rect x="1037.2" y="357" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1040.24" y="367.5" ></text>
</g>
<g >
<title>GlassPostList::move_forward_in_chunk_to_at_least (3,490,000,000 samples, 0.03%)</title><rect x="1042.5" y="373" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1045.51" y="383.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (88,380,000,000 samples, 0.79%)</title><rect x="604.2" y="197" width="9.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="607.21" y="207.5" ></text>
</g>
<g >
<title>generic_file_read_iter (17,580,000,000 samples, 0.16%)</title><rect x="81.0" y="245" width="1.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="83.97" y="255.5" ></text>
</g>
<g >
<title>generic_file_read_iter (15,060,000,000 samples, 0.13%)</title><rect x="1092.5" y="197" width="1.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1095.54" y="207.5" ></text>
</g>
<g >
<title>aisearch::SUDocItem::write&lt;apache::thrift::CompactProtocolWriter&gt; (2,450,000,000 samples, 0.02%)</title><rect x="28.5" y="469" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="31.49" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_write (1,430,000,000 samples, 0.01%)</title><rect x="1166.6" y="549" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1169.60" y="559.5" ></text>
</g>
<g >
<title>GlassPostList::get_doclength (2,210,000,000 samples, 0.02%)</title><rect x="96.2" y="469" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="99.15" y="479.5" ></text>
</g>
<g >
<title>GlassPostList::current_chunk_contains (2,730,000,000 samples, 0.02%)</title><rect x="719.4" y="405" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="722.39" y="415.5" ></text>
</g>
<g >
<title>OrPostList::get_maxweight (1,110,000,000 samples, 0.01%)</title><rect x="1154.9" y="485" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1157.89" y="495.5" ></text>
</g>
<g >
<title>vfs_read (127,980,000,000 samples, 1.14%)</title><rect x="602.9" y="277" width="13.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="605.91" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5,180,000,000 samples, 0.05%)</title><rect x="1165.4" y="485" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1168.42" y="495.5" ></text>
</g>
<g >
<title>__seccomp_filter (1,950,000,000 samples, 0.02%)</title><rect x="616.9" y="245" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="619.90" y="255.5" ></text>
</g>
<g >
<title>[ai_index] (1,000,000,000 samples, 0.01%)</title><rect x="1036.9" y="357" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1039.93" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3,670,000,000 samples, 0.03%)</title><rect x="933.3" y="309" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="936.33" y="319.5" ></text>
</g>
</g>
</svg>
